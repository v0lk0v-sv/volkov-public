{
  "version": 3,
  "sources": ["../../@av/timeline/dist/index.js", "../../@av/timeline/node_modules/nanostores/action/index.js", "../../@av/timeline/node_modules/nanostores/clean-stores/index.js", "../../@av/timeline/node_modules/nanostores/atom/index.js", "../../@av/timeline/node_modules/nanostores/lifecycle/index.js", "../../@av/timeline/node_modules/nanostores/computed/index.js", "../../@av/timeline/node_modules/nanostores/map/index.js"],
  "sourcesContent": ["var __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value2) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value: value2 }) : obj[key] = value2;\nvar __publicField = (obj, key, value2) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value2);\n  return value2;\n};\nimport { jsx, jsxs, Fragment } from \"react/jsx-runtime\";\nimport { clsx } from \"clsx\";\nimport * as React from \"react\";\nimport { memo, useRef, useState, useEffect, useCallback, useMemo } from \"react\";\nimport { useStore } from \"@nanostores/react\";\nimport { computed, atom, map } from \"nanostores\";\nconst activeEvent = \"_activeEvent_15yh3_1\";\nconst visible$1 = \"_visible_15yh3_13\";\nconst styles$a = {\n  activeEvent,\n  visible: visible$1\n};\nfunction ActiveEvent({ timelineStore }) {\n  const ref = useRef(null);\n  const [lastActiveEvent, setLastActiveEvent] = useState(null);\n  const { $settings, $activeEvent } = timelineStore;\n  const { $timelineSize } = timelineStore.viewState;\n  const { renderActiveEvent: renderActiveEvent2 } = useStore($settings);\n  useEffect(() => {\n    if (!renderActiveEvent2) {\n      return;\n    }\n    return $activeEvent.subscribe((activeEvent2) => {\n      if (activeEvent2) {\n        setLastActiveEvent(activeEvent2);\n      }\n      const node = ref.current;\n      if (!node) {\n        return;\n      }\n      node.classList.toggle(styles$a.visible, Boolean(activeEvent2));\n    });\n  }, [$activeEvent, renderActiveEvent2]);\n  useEffect(() => {\n    if (!renderActiveEvent2) {\n      return;\n    }\n    return $timelineSize.subscribe(({ activeEventPanelWidth }) => {\n      if (!ref.current) {\n        return;\n      }\n      ref.current.style.width = `${activeEventPanelWidth}px`;\n    });\n  }, [$timelineSize, renderActiveEvent2]);\n  if (!renderActiveEvent2) {\n    return null;\n  }\n  return /* @__PURE__ */ jsx(\"div\", { className: styles$a.activeEvent, ref, children: lastActiveEvent && renderActiveEvent2(lastActiveEvent) });\n}\nconst EnhancedActiveEvent = memo(ActiveEvent);\nconst currentTime = \"_currentTime_cmdjp_1\";\nconst point = \"_point_cmdjp_10\";\nconst styles$9 = {\n  currentTime,\n  point\n};\nfunction CurrentTime({ timelineStore }) {\n  const ref = useRef(null);\n  const visibleRef = useRef(false);\n  const { $currentTime, $settings } = timelineStore;\n  const { $timeState, $viewRangeTime, $timelineSize } = timelineStore.viewState;\n  const { showCurrentTime } = useStore($settings);\n  useEffect(() => {\n    if (!showCurrentTime) {\n      visibleRef.current = false;\n      return;\n    }\n    const $data = computed(\n      [$currentTime, $timeState, $viewRangeTime, $timelineSize],\n      (currentTime2, timeState, viewRangeTime, timelineSize) => ({\n        currentTime: currentTime2,\n        timeState,\n        viewRangeTime,\n        timelineSize\n      })\n    );\n    const unsubscribe = $data.subscribe(({ currentTime: currentTime2, timeState, viewRangeTime, timelineSize }) => {\n      const node = ref.current;\n      if (!node) {\n        return;\n      }\n      const [start, end] = viewRangeTime;\n      if (currentTime2 < start || currentTime2 > end) {\n        if (visibleRef.current) {\n          visibleRef.current = false;\n          node.style.display = \"none\";\n        }\n        return;\n      }\n      if (!visibleRef.current) {\n        visibleRef.current = true;\n        node.style.display = \"block\";\n      }\n      const left = Math.round((currentTime2 - timeState.start) / timeState.scale - 1);\n      const top = timelineSize.headerHeight;\n      node.style.left = `${left}px`;\n      node.style.top = `${top}px`;\n    });\n    return () => {\n      unsubscribe();\n      $data.off();\n    };\n  }, [$currentTime, $timeState, $viewRangeTime, $timelineSize, showCurrentTime]);\n  if (!showCurrentTime) {\n    return null;\n  }\n  return /* @__PURE__ */ jsx(\"div\", { className: styles$9.currentTime, ref, children: /* @__PURE__ */ jsx(\"div\", { className: styles$9.point }) });\n}\nconst EnhancedCurrentTime = memo(CurrentTime);\nconst SECOND_MS = 1e3;\nconst MINUTE_MS = SECOND_MS * 60;\nconst HOUR_MS = MINUTE_MS * 60;\nconst DAY_MS = HOUR_MS * 24;\nconst GRID_STEP_SIZES = [\n  SECOND_MS * 10,\n  SECOND_MS * 20,\n  SECOND_MS * 30,\n  MINUTE_MS,\n  MINUTE_MS * 2,\n  MINUTE_MS * 3,\n  MINUTE_MS * 5,\n  MINUTE_MS * 10,\n  MINUTE_MS * 20,\n  MINUTE_MS * 30,\n  HOUR_MS,\n  HOUR_MS * 2,\n  HOUR_MS * 4,\n  HOUR_MS * 8,\n  HOUR_MS * 12,\n  DAY_MS\n];\nconst DEFAULT_HEADER_HEIGHT = 44;\nconst MIN_GRID_WIDTH = 60;\nconst DEFAULT_SCALE = HOUR_MS * 4 / 70;\nconst MAX_SCALE = GRID_STEP_SIZES[GRID_STEP_SIZES.length - 1] / 60;\nconst MIN_SCALE = GRID_STEP_SIZES[0] / 100;\nconst DEFAULT_DATA_VIEW_PADDING = 8;\nconst DEFAULT_EVENT_LINE_HEIGHT = 8;\nconst DEFAULT_EVENT_LINE_MARGIN = 3;\nconst DEFAULT_ROW_PADDING = 10;\nconst DEFAULT_EVENT_CONTENT_MIN_WIDTH = 10;\nconst SIDEBAR_LOADING_HEIGHT = 32;\nconst DEFAULT_EVENTS_LOAD_STEP_SIZE = DAY_MS;\nconst MAX_PARALLEL_EVENTS_REQUEST = 5;\nconst EVENT_POPUP_OFFSET = 6;\nconst SUPPORTED_TIME_ZONES = Intl.supportedValuesOf(\"timeZone\");\nconst CURRENT_TIME_ZONE = Intl.DateTimeFormat().resolvedOptions().timeZone;\nconst DEVICE_PIXEL_RATIO = window.devicePixelRatio;\nconst lastGridStepSize = GRID_STEP_SIZES[GRID_STEP_SIZES.length - 1];\nfunction getGridStepSize(scale) {\n  for (let i = 0; i < GRID_STEP_SIZES.length; i++) {\n    const step = GRID_STEP_SIZES[i];\n    const width = step / scale;\n    if (width >= MIN_GRID_WIDTH) {\n      return step;\n    }\n  }\n  return lastGridStepSize;\n}\nfunction fitTimeToStepSize(time2, stepSize, timezoneOffset) {\n  const sameUTCTime = time2 - timezoneOffset;\n  const clippedUTCTime = Math.floor(sameUTCTime / stepSize) * stepSize;\n  const timeDiff = sameUTCTime - clippedUTCTime;\n  const newTime = time2 - timeDiff;\n  return newTime;\n}\nfunction stringifyTime(time2, gridStepSize, viewTimeZone) {\n  return new Date(time2).toLocaleString(\"en-US\", {\n    hourCycle: \"h23\",\n    hour: \"numeric\",\n    minute: \"numeric\",\n    second: gridStepSize < MINUTE_MS ? \"numeric\" : void 0,\n    timeZone: viewTimeZone.name\n  });\n}\nfunction stringifyDay(time2, viewTimeZone) {\n  return new Date(time2).toLocaleString(\"en-US\", {\n    day: \"numeric\",\n    month: \"short\",\n    timeZone: viewTimeZone.name\n  });\n}\nfunction onWheel($mouseCoords, listener) {\n  const eventListener = (event2) => {\n    if (event2.metaKey || event2.ctrlKey) {\n      const { left } = $mouseCoords.get();\n      const containerOffset = left;\n      const delta = event2.deltaY;\n      listener(containerOffset, delta);\n      event2.preventDefault();\n    }\n  };\n  window.addEventListener(\"wheel\", eventListener, { passive: false });\n  return () => window.removeEventListener(\"wheel\", eventListener);\n}\nfunction pluralize(value2, strOne, strMany) {\n  if (value2 % 10 === 1) {\n    return strOne;\n  }\n  return strMany;\n}\nfunction stringifyGridStepSize(gridStepSize) {\n  if (gridStepSize < MINUTE_MS) {\n    const value22 = Math.round(gridStepSize / SECOND_MS);\n    return `${value22} ${pluralize(value22, \"sec\", \"sec\")}`;\n  }\n  if (gridStepSize < HOUR_MS) {\n    const value22 = Math.round(gridStepSize / MINUTE_MS);\n    return `${value22} ${pluralize(value22, \"min\", \"min\")}`;\n  }\n  if (gridStepSize < DAY_MS) {\n    const value22 = Math.round(gridStepSize / HOUR_MS);\n    return `${value22} ${pluralize(value22, \"hr\", \"hrs\")}`;\n  }\n  const value2 = Math.round(gridStepSize / DAY_MS);\n  return `${value2} ${pluralize(value2, \"day\", \"days\")}`;\n}\nfunction updateTimeState(timeState, delta, containerOffset) {\n  const { scale: currentScale, start: currentStart } = timeState;\n  let newScale = currentScale * 60 / (60 - delta / 2.5);\n  if (newScale > MAX_SCALE) {\n    newScale = MAX_SCALE;\n  } else if (newScale < MIN_SCALE) {\n    newScale = MIN_SCALE;\n  }\n  const newStart = Math.round(currentStart + containerOffset * currentScale - containerOffset * newScale);\n  return {\n    scale: newScale,\n    start: newStart\n  };\n}\nconst TARGET_FRAME_STEP_SIZE = 1e3 / 60;\nconst SLOW_DOWN_FACTOR = 10;\nlet nextFramePlanned = false;\nlet animationFrames = [];\nfunction requestFrame(handler) {\n  animationFrames.push(handler);\n  if (nextFramePlanned) {\n    return;\n  }\n  nextFramePlanned = true;\n  requestAnimationFrame((timestamp) => {\n    const currentFrames = animationFrames;\n    animationFrames = [];\n    nextFramePlanned = false;\n    for (let i = 0; i < currentFrames.length; i++) {\n      const handler2 = currentFrames[i];\n      handler2(timestamp);\n    }\n  });\n}\nfunction initAnimationController(defaultValue, setValue, onAnimationStop) {\n  let targetValue = defaultValue;\n  let activeValue = defaultValue;\n  let animationSpeed = 0;\n  let lastFrameTime = null;\n  let distanceFactor = 0;\n  let treshold = 0;\n  let active = false;\n  let destroyed = false;\n  const updateValue = (value2) => {\n    activeValue = value2;\n    setValue(value2);\n  };\n  const finishAnimation = () => {\n    updateValue(targetValue);\n    lastFrameTime = null;\n    animationSpeed = 0;\n    active = false;\n    if (onAnimationStop) {\n      onAnimationStop();\n    }\n  };\n  const set = (value2) => {\n    if (value2 !== activeValue) {\n      targetValue = value2;\n      updateValue(value2);\n    }\n  };\n  const animate = (timestamp) => {\n    if (destroyed) {\n      return;\n    }\n    const diff = targetValue - activeValue;\n    const absDiff = Math.abs(diff);\n    if (absDiff <= treshold) {\n      finishAnimation();\n      return;\n    }\n    const timestampDiff = lastFrameTime ? timestamp - lastFrameTime : TARGET_FRAME_STEP_SIZE;\n    const timeScale = timestampDiff / TARGET_FRAME_STEP_SIZE;\n    const targetHits = (absDiff / distanceFactor + SLOW_DOWN_FACTOR) / 2;\n    const targetSpeed = diff / targetHits;\n    const newAnimationSpeed = (animationSpeed + targetSpeed) / 2;\n    const shift = (newAnimationSpeed + newAnimationSpeed * timeScale) / 2;\n    if (Math.abs(shift) >= absDiff) {\n      finishAnimation();\n      return;\n    }\n    const newValue = activeValue + shift;\n    lastFrameTime = timestamp;\n    animationSpeed = newAnimationSpeed;\n    updateValue(newValue);\n    requestFrame(animate);\n  };\n  const move = (value2, newDistanceFactor) => {\n    if (targetValue === value2) {\n      return;\n    }\n    targetValue = value2;\n    distanceFactor = newDistanceFactor;\n    treshold = newDistanceFactor / 500;\n    if (!active) {\n      active = true;\n      requestFrame(animate);\n    }\n  };\n  const reset = () => {\n    destroyed = true;\n  };\n  return { move, set, reset };\n}\nfunction parseDateComponents(date, timeZone) {\n  const str = date.toLocaleString(\"en-US\", {\n    hourCycle: \"h23\",\n    timeZone,\n    year: \"numeric\",\n    month: \"numeric\",\n    day: \"numeric\",\n    hour: \"numeric\",\n    minute: \"numeric\"\n  });\n  const match = str.match(/^(\\d+)\\/(\\d+)\\/(\\d+),\\s(\\d+):(\\d+)$/);\n  if (!match) {\n    return null;\n  }\n  const [, month, day, year, hour, minute] = match;\n  return {\n    year: Number(year),\n    month: Number(month) - 1,\n    day: Number(day),\n    hour: Number(hour),\n    minute: Number(minute)\n  };\n}\nfunction getComponentsTimestamp(components) {\n  const { year, month, day, hour, minute } = components;\n  return Date.UTC(year, month, day, hour, minute);\n}\nfunction getTimezoneOffset(time2, timeZone) {\n  const date = time2 ? new Date(time2) : /* @__PURE__ */ new Date();\n  const currentTimezoneOffset = date.getTimezoneOffset() * MINUTE_MS;\n  if (!timeZone) {\n    return currentTimezoneOffset;\n  }\n  if (!SUPPORTED_TIME_ZONES.includes(timeZone)) {\n    console.error(`Unsupported time zone ${timeZone}, local time zone will be used: ${CURRENT_TIME_ZONE}`);\n    return currentTimezoneOffset;\n  }\n  const tzComponents = parseDateComponents(date, timeZone);\n  const utcComponents = parseDateComponents(date, \"UTC\");\n  if (!tzComponents || !utcComponents) {\n    return currentTimezoneOffset;\n  }\n  const timezoneOffset = getComponentsTimestamp(utcComponents) - getComponentsTimestamp(tzComponents);\n  return timezoneOffset;\n}\nconst months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\nfunction stringifyDateRange(start, end, viewTimeZone) {\n  const startComponents = parseDateComponents(new Date(start), viewTimeZone.name);\n  const endComponents = parseDateComponents(new Date(end), viewTimeZone.name);\n  if (!startComponents || !endComponents) {\n    return \"\";\n  }\n  const { month: startMonth, day: startDay } = startComponents;\n  const { month: endMonth, day: endDay } = endComponents;\n  if (startMonth === endMonth) {\n    if (startDay === endDay) {\n      return `${months[startMonth]} ${startDay}`;\n    }\n    return `${months[startMonth]} ${startDay} – ${endDay}`;\n  }\n  return `${months[startMonth]} ${startDay} – ${months[endMonth]} ${endDay}`;\n}\nfunction getEventsLoadSteps(range, loadStepSize, timezoneOffset) {\n  const [start, end] = range;\n  let eventsLoadStep = fitTimeToStepSize(start, loadStepSize, timezoneOffset);\n  const eventsLoadSteps = [];\n  while (eventsLoadStep < end) {\n    eventsLoadSteps.push(eventsLoadStep);\n    eventsLoadStep += loadStepSize;\n  }\n  return eventsLoadSteps;\n}\nclass EventsStorage {\n  constructor(dataTZOffset, eventsLoadStepSize) {\n    __publicField(this, \"events\", {});\n    __publicField(this, \"subscribers\", /* @__PURE__ */ new Map());\n    __publicField(this, \"dataTZOffset\");\n    __publicField(this, \"eventsLoadStepSize\");\n    this.dataTZOffset = dataTZOffset;\n    this.eventsLoadStepSize = eventsLoadStepSize;\n  }\n  subscribe(rowId, listener) {\n    let subscribers = this.subscribers.get(rowId);\n    if (!subscribers) {\n      subscribers = /* @__PURE__ */ new Set();\n      this.subscribers.set(rowId, subscribers);\n    }\n    subscribers.add(listener);\n    return () => subscribers == null ? void 0 : subscribers.delete(listener);\n  }\n  unsubscribe(rowId, listener) {\n    const subscribers = this.subscribers.get(rowId);\n    if (subscribers) {\n      subscribers.delete(listener);\n    }\n  }\n  getEvents(rowId, range) {\n    const rowEvents = this.events[rowId];\n    if (!rowEvents) {\n      return [];\n    }\n    const eventsLoadSteps = getEventsLoadSteps(range, this.eventsLoadStepSize, this.dataTZOffset);\n    const [from, to] = range;\n    const outOfLoadStepSet = /* @__PURE__ */ new Set();\n    const events = [];\n    for (let i = 0; i < eventsLoadSteps.length; i++) {\n      const loadStepStart = eventsLoadSteps[i];\n      const loadStepEnd = loadStepStart + this.eventsLoadStepSize;\n      const loadStepEvents = rowEvents[loadStepStart];\n      if (loadStepEvents) {\n        for (let j = 0; j < loadStepEvents.length; j++) {\n          const event2 = loadStepEvents[j];\n          const isInRange = event2.start < to && event2.end > from;\n          if (!isInRange) {\n            continue;\n          }\n          const isOutOfLoadStep = event2.start < loadStepStart || event2.end > loadStepEnd;\n          if (isOutOfLoadStep) {\n            if (outOfLoadStepSet.has(event2.id)) {\n              continue;\n            }\n            outOfLoadStepSet.add(event2.id);\n          }\n          events.push(event2);\n        }\n      }\n    }\n    return events;\n  }\n  set(rowId, from, events) {\n    let rowEvents = this.events[rowId];\n    if (!rowEvents) {\n      rowEvents = {};\n      this.events[rowId] = rowEvents;\n    }\n    rowEvents[from] = events;\n    const subscribers = this.subscribers.get(rowId);\n    if (subscribers) {\n      subscribers.forEach((listener) => listener());\n    }\n  }\n  getChunk(rowId, from) {\n    const rowEvents = this.events[rowId];\n    if (rowEvents) {\n      return rowEvents[from] || null;\n    }\n    return null;\n  }\n  reset() {\n    this.subscribers = /* @__PURE__ */ new Map();\n    this.events = {};\n  }\n}\nfunction stringifyTimeUnit(value2) {\n  return String(value2).padStart(2, \"0\");\n}\nfunction stringifyTimeRange(start, end) {\n  const startDate = new Date(start);\n  const startHour = stringifyTimeUnit(startDate.getHours());\n  const startMinute = stringifyTimeUnit(startDate.getMinutes());\n  const startSecond = stringifyTimeUnit(startDate.getSeconds());\n  if (start === end) {\n    return `${startHour}:${startMinute}:${startSecond}`;\n  }\n  const endDate = new Date(end);\n  const endHour = stringifyTimeUnit(endDate.getHours());\n  const endMinute = stringifyTimeUnit(endDate.getMinutes());\n  const endSecond = stringifyTimeUnit(endDate.getSeconds());\n  if (end - start > MINUTE_MS * 10) {\n    return `${startHour}:${startMinute} – ${endHour}:${endMinute}`;\n  }\n  return `${startHour}:${startMinute}:${startSecond} – ${endHour}:${endMinute}:${endSecond}`;\n}\nfunction getUserTimeZoneOffset() {\n  return (/* @__PURE__ */ new Date()).getTimezoneOffset() * MINUTE_MS;\n}\nfunction stringifyTimezoneOffset(timezoneOffset) {\n  if (timezoneOffset === 0) {\n    return \"GMT\";\n  }\n  const sign = timezoneOffset > 0 ? \"+\" : \"-\";\n  const offset = Math.abs(timezoneOffset);\n  const hours = Math.floor(offset / HOUR_MS);\n  const minutes = Math.floor((offset - hours * HOUR_MS) / MINUTE_MS);\n  return `GMT${sign}${stringifyTimeUnit(hours)}:${stringifyTimeUnit(minutes)}`;\n}\nfunction debouncedStore($store, timeout) {\n  const $debounced = atom($store.get());\n  let timer = null;\n  const unlisten = $store.listen((value2) => {\n    if (timer) {\n      clearTimeout(timer);\n    }\n    timer = setTimeout(() => {\n      $debounced.set(value2);\n      timer = null;\n    }, timeout);\n  });\n  const reset = () => {\n    unlisten();\n    if (timer) {\n      clearTimeout(timer);\n    }\n  };\n  return [$debounced, reset];\n}\nfunction usePersistentCallback(func) {\n  const ref = useRef(func || null);\n  ref.current = func || null;\n  const callback = useCallback((...args) => {\n    if (ref.current) {\n      return ref.current(...args);\n    }\n  }, []);\n  return callback;\n}\nfunction stringifyTimeDuration(diff) {\n  if (diff === 0) {\n    return \"\";\n  }\n  const hoursFloor = Math.floor(diff / HOUR_MS);\n  const hoursRound = Math.round(diff / HOUR_MS);\n  if (hoursFloor > 20) {\n    return `${hoursRound} ${pluralize(hoursRound, \"hr\", \"hrs\")}`;\n  }\n  const minutesFloor = Math.floor((diff - hoursFloor * HOUR_MS) / MINUTE_MS);\n  const minutesRound = Math.round((diff - hoursFloor * HOUR_MS) / MINUTE_MS);\n  if (hoursFloor > 0) {\n    if (minutesRound > 0) {\n      return `${hoursFloor} ${pluralize(hoursFloor, \"hr\", \"hrs\")} ${minutesRound} min`;\n    }\n    return `${hoursRound} ${pluralize(hoursRound, \"hr\", \"hrs\")}`;\n  }\n  if (minutesFloor > 20) {\n    return `${minutesRound} min`;\n  }\n  const secondsRound = Math.round((diff - hoursFloor * HOUR_MS - minutesFloor * MINUTE_MS) / SECOND_MS);\n  if (minutesFloor > 0) {\n    if (secondsRound > 0) {\n      return `${minutesFloor} min ${secondsRound} sec`;\n    }\n    return `${minutesRound} min`;\n  }\n  return `${secondsRound} sec`;\n}\nfunction getNestedRowsIds(rowsIds, rowsMap, rowsExpanded) {\n  const list = [];\n  for (let i = 0; i < rowsIds.length; i++) {\n    const rowId = rowsIds[i];\n    list.push(rowId);\n    const { children } = rowsMap[rowId];\n    const expanded2 = !rowsExpanded || rowsExpanded[rowId];\n    if (children && expanded2) {\n      const childIds = children.map(({ id }) => id);\n      list.push(...getNestedRowsIds(childIds, rowsMap, rowsExpanded));\n    }\n  }\n  return list;\n}\nfunction getNestedCoolapsedRowsIds(rowId, rowsMap, rowsExpanded, parentCollapsed) {\n  const rowsIds = [rowId];\n  const expanded2 = rowsExpanded[rowId];\n  const { children } = rowsMap[rowId];\n  if ((!expanded2 || parentCollapsed) && children) {\n    for (let i = 0; i < children.length; i++) {\n      const childRow = children[i];\n      rowsIds.push(...getNestedCoolapsedRowsIds(childRow.id, rowsMap, rowsExpanded, true));\n    }\n  }\n  return rowsIds;\n}\nfunction joinSortedTwoEvents(events1, events2) {\n  const events = [];\n  let index1 = 0;\n  let index2 = 0;\n  const length1 = events1.length;\n  const length2 = events2.length;\n  while (index1 < length1 && index2 < length2) {\n    const event1 = events1[index1];\n    const event2 = events2[index2];\n    if (event1.start < event2.start) {\n      events.push(event1);\n      index1 += 1;\n    } else {\n      events.push(event2);\n      index2 += 1;\n    }\n  }\n  if (index1 < length1) {\n    events.push(...events1.slice(index1));\n  }\n  if (index2 < length2) {\n    events.push(...events2.slice(index2));\n  }\n  return events;\n}\nfunction joinSortedEvents(eventsLists) {\n  if (eventsLists.length === 0) {\n    return [];\n  }\n  if (eventsLists.length === 1) {\n    return eventsLists[0];\n  }\n  const [first, ...rest] = eventsLists;\n  return joinSortedTwoEvents(first, joinSortedEvents(rest));\n}\nfunction getRowHeightWithChildren(rowId, rowsHeight, rowsMap) {\n  let height = rowsHeight[rowId];\n  const { children } = rowsMap[rowId];\n  if (children) {\n    for (let i = 0; i < children.length; i++) {\n      const childItem = children[i];\n      height += getRowHeightWithChildren(childItem.id, rowsHeight, rowsMap);\n    }\n  }\n  return height;\n}\nfunction findEventIndex(events, event2) {\n  let startIndex = 0;\n  let endIndex = events.length - 1;\n  let middleIndex = Math.floor(events.length / 2);\n  while (startIndex < endIndex) {\n    const middleEvent = events[middleIndex];\n    if (middleEvent.id === event2.id) {\n      return middleIndex;\n    }\n    if (middleEvent.start === event2.start) {\n      let index = middleIndex - 1;\n      while (index > 0) {\n        const indexEvent = events[index];\n        if (indexEvent.id === event2.id) {\n          return index;\n        }\n        if (indexEvent.start !== event2.start) {\n          break;\n        }\n        index--;\n      }\n      index = middleIndex + 1;\n      while (index < events.length) {\n        const indexEvent = events[index];\n        if (indexEvent.id === event2.id) {\n          return index;\n        }\n        if (indexEvent.start !== event2.start) {\n          break;\n        }\n        index++;\n      }\n      return null;\n    }\n    if (middleEvent.start < event2.start) {\n      startIndex = middleIndex;\n    } else {\n      endIndex = middleIndex;\n    }\n    middleIndex = Math.floor((endIndex + startIndex) / 2);\n    if (middleIndex === startIndex || middleIndex === endIndex) {\n      const startEvent = events[startIndex];\n      if (startEvent.id === event2.id) {\n        return startIndex;\n      }\n      const endEvent = events[endIndex];\n      if (endEvent.id === event2.id) {\n        return endIndex;\n      }\n      break;\n    }\n  }\n  return null;\n}\nfunction getEventsDiff(oldEvents, newEvents) {\n  const oldLength = oldEvents.length;\n  const newLength = newEvents.length;\n  if (oldLength < 4 || newLength < 4) {\n    return null;\n  }\n  const newMiddleIndex = Math.floor(newLength / 2);\n  const oldMiddleIndex = findEventIndex(oldEvents, newEvents[newMiddleIndex]);\n  if (!oldMiddleIndex) {\n    return null;\n  }\n  let newIndex = newMiddleIndex - 1;\n  let oldIndex = oldMiddleIndex - 1;\n  let newMatchStartIndex = null;\n  let oldMatchStartIndex = null;\n  while (newIndex >= 0 && oldIndex >= 0) {\n    const newEvent = newEvents[newIndex];\n    const oldEvent = oldEvents[oldIndex];\n    if (newEvent.id !== oldEvent.id) {\n      newMatchStartIndex = newIndex + 1;\n      oldMatchStartIndex = oldIndex + 1;\n      break;\n    }\n    newIndex--;\n    oldIndex--;\n  }\n  if (newMatchStartIndex === null || oldMatchStartIndex === null) {\n    newMatchStartIndex = newIndex + 1;\n    oldMatchStartIndex = oldIndex + 1;\n  }\n  newIndex = newMiddleIndex + 1;\n  oldIndex = oldMiddleIndex + 1;\n  let newMatchEndIndex = null;\n  let oldMatchEndIndex = null;\n  while (newIndex < newLength && oldIndex < oldLength) {\n    const newEvent = newEvents[newIndex];\n    const oldEvent = oldEvents[oldIndex];\n    if (newEvent.id !== oldEvent.id) {\n      newMatchEndIndex = newIndex - 1;\n      oldMatchEndIndex = oldIndex - 1;\n      break;\n    }\n    newIndex++;\n    oldIndex++;\n  }\n  if (newMatchEndIndex === null || oldMatchEndIndex === null) {\n    newMatchEndIndex = newIndex - 1;\n    oldMatchEndIndex = oldIndex - 1;\n  }\n  const removedStart = oldEvents.slice(0, oldMatchStartIndex);\n  const addedStart = newEvents.slice(0, newMatchStartIndex);\n  const removedEnd = oldEvents.slice(oldMatchEndIndex + 1);\n  const addedEnd = newEvents.slice(newMatchEndIndex + 1);\n  const totalChanged = removedStart.length + addedStart.length + removedEnd.length + addedEnd.length;\n  if (totalChanged / newLength < 0.5) {\n    return {\n      addedEnd,\n      addedStart,\n      removedEnd,\n      removedStart\n    };\n  }\n  return null;\n}\nfunction createAtom(defaultValue) {\n  const $atom = atom(defaultValue);\n  const reset = () => {\n    $atom.off();\n  };\n  return [$atom, reset];\n}\nfunction createMapStore(defaultValue) {\n  const $atom = map(defaultValue);\n  const reset = () => {\n    $atom.off();\n  };\n  return [$atom, reset];\n}\nconst activeDate = \"_activeDate_ttdj9_1\";\nconst value$1 = \"_value_ttdj9_16\";\nconst timezone = \"_timezone_ttdj9_21\";\nconst styles$8 = {\n  activeDate,\n  value: value$1,\n  timezone\n};\nfunction ActiveDate({ timelineStore }) {\n  const ref = useRef(null);\n  const timeRef = useRef(null);\n  const timezoneRef = useRef(null);\n  const timeTextRef = useRef(\"\");\n  const timezoneTextRef = useRef(\"\");\n  const { $viewRangeTime, $timelineSize } = timelineStore.viewState;\n  const { $viewTimeZone, $settings } = timelineStore;\n  const { showTimezoneInfo } = useStore($settings);\n  useEffect(() => {\n    timeTextRef.current = \"\";\n    timezoneTextRef.current = \"\";\n    const $timeText = computed([$viewRangeTime, $viewTimeZone], (viewRangeTime, viewTimeZone) => {\n      const [start, end] = viewRangeTime;\n      return stringifyDateRange(start, end, viewTimeZone);\n    });\n    const unsubscribeTimeText = $timeText.subscribe((timeText) => {\n      if (!timeRef.current) {\n        return;\n      }\n      if (timeTextRef.current === timeText) {\n        return;\n      }\n      timeTextRef.current = timeText;\n      timeRef.current.innerHTML = \"\";\n      timeRef.current.appendChild(document.createTextNode(timeText));\n    });\n    const unsubscribeTimeZone = $viewTimeZone.subscribe((viewTimeZone) => {\n      if (!timezoneRef.current) {\n        return;\n      }\n      const { name, offset } = viewTimeZone;\n      let timezoneText = name;\n      if (name === CURRENT_TIME_ZONE) {\n        timezoneText = \"\";\n      } else {\n        const offsetStr = stringifyTimezoneOffset(offset);\n        timezoneText = `${offsetStr} ${name}`;\n      }\n      if (timezoneTextRef.current === timezoneText) {\n        return;\n      }\n      timezoneTextRef.current = timezoneText;\n      timezoneRef.current.innerHTML = \"\";\n      if (!timezoneText) {\n        timezoneRef.current.style.display = \"none\";\n      } else {\n        timezoneRef.current.style.display = \"block\";\n        timezoneRef.current.appendChild(document.createTextNode(timezoneText));\n      }\n    });\n    const unsubscribeTimelineSize = $timelineSize.subscribe((timelineSize) => {\n      if (!ref.current) {\n        return;\n      }\n      const { sidebarWidth } = timelineSize;\n      ref.current.style.width = `${sidebarWidth}px`;\n    });\n    return () => {\n      unsubscribeTimeText();\n      unsubscribeTimeZone();\n      unsubscribeTimelineSize();\n      $timeText.off();\n    };\n  }, [$viewRangeTime, $viewTimeZone, $timelineSize, showTimezoneInfo]);\n  return /* @__PURE__ */ jsxs(\"div\", { className: styles$8.activeDate, ref, children: [\n    /* @__PURE__ */ jsx(\"div\", { className: styles$8.value, ref: timeRef }),\n    showTimezoneInfo && /* @__PURE__ */ jsx(\"div\", { className: styles$8.timezone, ref: timezoneRef })\n  ] });\n}\nconst gridStep = \"_gridStep_r7e6h_1\";\nconst isDayStart = \"_isDayStart_r7e6h_14\";\nconst styles$7 = {\n  gridStep,\n  isDayStart\n};\nfunction GridStep({ gridStep: gridStep2, timelineStore }) {\n  const ref = useRef(null);\n  const textRef = useRef(null);\n  useEffect(() => {\n    const { $gridStepSize } = timelineStore.gridState;\n    const { $timeState } = timelineStore.viewState;\n    const $data = computed([$timeState, $gridStepSize], (timeState, gridStepSize) => ({ timeState, gridStepSize }));\n    const unsubscribe = $data.subscribe(({ timeState, gridStepSize }) => {\n      const node = ref.current;\n      if (!node) {\n        return;\n      }\n      const width = Math.round(gridStepSize / timeState.scale);\n      const left = Math.round((gridStep2 - timeState.start) / timeState.scale - width / 2);\n      node.style.left = `${left}px`;\n      node.style.width = `${width}px`;\n    });\n    return () => {\n      unsubscribe();\n      $data.off();\n    };\n  }, [gridStep2, timelineStore]);\n  useEffect(() => {\n    const { $viewTimeZone } = timelineStore;\n    const { $gridStepSize } = timelineStore.gridState;\n    const $data = computed([$viewTimeZone, $gridStepSize], (viewTimeZone, gridStepSize) => ({\n      viewTimeZone,\n      gridStepSize\n    }));\n    const unsubscribe = $data.subscribe(({ viewTimeZone, gridStepSize }) => {\n      const textNode = textRef.current;\n      if (!textNode) {\n        return;\n      }\n      let text = stringifyTime(gridStep2, gridStepSize, viewTimeZone);\n      const isDayStart2 = text === \"00:00\" || text === \"00:00:00\";\n      if (isDayStart2) {\n        text = stringifyDay(gridStep2, viewTimeZone);\n      }\n      textNode.innerHTML = \"\";\n      textNode.appendChild(document.createTextNode(text));\n      textNode.classList.toggle(styles$7.isDayStart, isDayStart2);\n    });\n    return () => {\n      unsubscribe();\n      $data.off();\n    };\n  }, [gridStep2, timelineStore]);\n  return /* @__PURE__ */ jsx(\"div\", { className: styles$7.gridStep, ref, children: /* @__PURE__ */ jsx(\"div\", { className: styles$7.text, ref: textRef }) });\n}\nconst EnhancedGridStep = memo(GridStep);\nfunction GridSteps({ timelineStore }) {\n  const { $gridSteps } = timelineStore.gridState;\n  const gridSteps = useStore($gridSteps);\n  return /* @__PURE__ */ jsx(Fragment, { children: gridSteps.map((gridStep2) => /* @__PURE__ */ jsx(EnhancedGridStep, { gridStep: gridStep2, timelineStore }, gridStep2)) });\n}\nconst SvgMinusLine = (props) => /* @__PURE__ */ React.createElement(\"svg\", { width: 24, height: 24, viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", ...props }, /* @__PURE__ */ React.createElement(\"g\", { id: \"minus-line\" }, /* @__PURE__ */ React.createElement(\"path\", { id: \"vector\", d: \"M20 12H4\", stroke: \"currentColor\", strokeWidth: 1.8, strokeLinecap: \"square\", strokeLinejoin: \"round\" })));\nconst SvgPlusLine = (props) => /* @__PURE__ */ React.createElement(\"svg\", { width: 24, height: 24, viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", ...props }, /* @__PURE__ */ React.createElement(\"g\", { id: \"plus-line\" }, /* @__PURE__ */ React.createElement(\"path\", { id: \"vector\", d: \"M12 4V20M20 12H4\", stroke: \"currentColor\", strokeWidth: 1.8, strokeLinecap: \"square\", strokeLinejoin: \"round\" })));\nconst scaleController = \"_scaleController_9iom2_1\";\nconst scaleButton = \"_scaleButton_9iom2_16\";\nconst value = \"_value_9iom2_35\";\nconst icon$1 = \"_icon_9iom2_40\";\nconst styles$6 = {\n  scaleController,\n  scaleButton,\n  value,\n  icon: icon$1\n};\nfunction ScaleController({ timelineStore }) {\n  const { animateScale } = timelineStore.viewState;\n  const { $gridStepSize } = timelineStore.gridState;\n  const gridStepSize = useStore($gridStepSize);\n  const scaleDown = useCallback(() => animateScale(2), [animateScale]);\n  const scaleUp = useCallback(() => animateScale(0.5), [animateScale]);\n  const text = useMemo(() => stringifyGridStepSize(gridStepSize), [gridStepSize]);\n  return /* @__PURE__ */ jsxs(\"div\", { className: styles$6.scaleController, children: [\n    /* @__PURE__ */ jsx(\"div\", { className: styles$6.scaleButton, onClick: scaleDown, children: /* @__PURE__ */ jsx(SvgMinusLine, { className: styles$6.icon }) }),\n    /* @__PURE__ */ jsx(\"div\", { className: styles$6.value, children: text }),\n    /* @__PURE__ */ jsx(\"div\", { className: styles$6.scaleButton, onClick: scaleUp, children: /* @__PURE__ */ jsx(SvgPlusLine, { className: styles$6.icon }) })\n  ] });\n}\nconst headerRow = \"_headerRow_1083l_1\";\nconst styles$5 = {\n  headerRow\n};\nfunction Header({\n  timelineStore\n}) {\n  const ref = useRef(null);\n  const { $settings } = timelineStore;\n  const { $timelineSize } = timelineStore.viewState;\n  const { showScaleController, showSidebar } = useStore($settings);\n  useEffect(() => {\n    return $timelineSize.subscribe(({ width, headerHeight }) => {\n      if (ref.current) {\n        ref.current.style.width = `${width}px`;\n        ref.current.style.height = `${headerHeight}px`;\n      }\n    });\n  });\n  return /* @__PURE__ */ jsxs(\"div\", { className: styles$5.headerRow, ref, children: [\n    /* @__PURE__ */ jsx(GridSteps, { timelineStore }),\n    showSidebar && /* @__PURE__ */ jsx(ActiveDate, { timelineStore }),\n    showScaleController && /* @__PURE__ */ jsx(ScaleController, { timelineStore })\n  ] });\n}\nconst EnhancedHeader = memo(Header);\nconst hoveredEvent = \"_hoveredEvent_pdbp3_1\";\nconst visible = \"_visible_pdbp3_19\";\nconst header = \"_header_pdbp3_25\";\nconst time$1 = \"_time_pdbp3_31\";\nconst duration = \"_duration_pdbp3_36\";\nconst content$1 = \"_content_pdbp3_43\";\nconst styles$4 = {\n  hoveredEvent,\n  visible,\n  header,\n  time: time$1,\n  duration,\n  content: content$1\n};\nconst HIDE_TIMEOUT = 100;\nfunction HoveredEvent({ timelineStore }) {\n  const ref = useRef(null);\n  const eventRef = useRef(null);\n  const hideTimeoutRef = useRef(null);\n  const [visible2, setVisible] = useState(false);\n  const { $hoveredEvent, $settings } = timelineStore;\n  const { $mouseCoords } = timelineStore.viewState;\n  const { $timelineSize } = timelineStore.viewState;\n  const hoveredEvent2 = useStore($hoveredEvent);\n  const { renderEventPopupContent, eventLineHeight, showHoveredEventPopup } = useStore($settings);\n  useEffect(() => {\n    if (hoveredEvent2 && showHoveredEventPopup) {\n      if (hideTimeoutRef.current) {\n        clearTimeout(hideTimeoutRef.current);\n        hideTimeoutRef.current = null;\n      }\n      eventRef.current = hoveredEvent2;\n      setVisible(true);\n    } else {\n      hideTimeoutRef.current = setTimeout(() => setVisible(false), HIDE_TIMEOUT);\n    }\n  }, [hoveredEvent2, showHoveredEventPopup]);\n  useEffect(\n    () => () => {\n      if (hideTimeoutRef.current) {\n        clearTimeout(hideTimeoutRef.current);\n        hideTimeoutRef.current = null;\n      }\n    },\n    []\n  );\n  const renderedEvent = hoveredEvent2 || eventRef.current;\n  useEffect(() => {\n    if (visible2) {\n      const getNodeTop = (rect) => {\n        if (!ref.current || !rect) {\n          return 0;\n        }\n        const { headerHeight } = $timelineSize.get();\n        const nodeHeight = ref.current.offsetHeight;\n        let nodeTop = rect.top + headerHeight - nodeHeight - EVENT_POPUP_OFFSET;\n        if (nodeTop <= 0) {\n          nodeTop = rect.top + rect.height + headerHeight + EVENT_POPUP_OFFSET;\n        }\n        return nodeTop;\n      };\n      const topAnimationController = initAnimationController(getNodeTop(renderedEvent == null ? void 0 : renderedEvent.rect), (value2) => {\n        if (ref.current) {\n          ref.current.style.top = `${value2}px`;\n        }\n      });\n      if (ref.current) {\n        ref.current.style.top = `${getNodeTop(renderedEvent == null ? void 0 : renderedEvent.rect)}px`;\n      }\n      const unsubscribeHoveredEvent = $hoveredEvent.subscribe((hoveredEvent22) => {\n        if (!ref.current || !hoveredEvent22) {\n          return;\n        }\n        const nodeTop = getNodeTop(hoveredEvent22.rect);\n        topAnimationController.move(nodeTop, eventLineHeight * 20);\n      });\n      const unsubscribeMouseCoords = $mouseCoords.subscribe(({ left }) => {\n        if (ref.current) {\n          const { width } = $timelineSize.get();\n          const nodeWidth = ref.current.offsetWidth;\n          let nodeLeft = Math.round(left - nodeWidth / 2);\n          if (nodeLeft < 4) {\n            nodeLeft = nodeLeft = 4;\n          } else if (nodeLeft + nodeWidth > width - 4) {\n            nodeLeft = width - 4 - nodeWidth;\n          }\n          ref.current.style.left = `${nodeLeft}px`;\n        }\n      });\n      return () => {\n        unsubscribeMouseCoords();\n        topAnimationController.reset();\n        unsubscribeHoveredEvent();\n      };\n    }\n  }, [visible2, $mouseCoords, $timelineSize]);\n  const timeStr = useMemo(() => {\n    if (!renderedEvent) {\n      return null;\n    }\n    return stringifyTimeRange(renderedEvent.event.start, renderedEvent.event.end);\n  }, [renderedEvent]);\n  const timeDurationStr = useMemo(() => {\n    if (!renderedEvent) {\n      return null;\n    }\n    return stringifyTimeDuration(renderedEvent.event.end - renderedEvent.event.start);\n  }, [renderedEvent]);\n  return /* @__PURE__ */ jsxs(\"div\", { className: clsx(styles$4.hoveredEvent, visible2 && styles$4.visible), ref, children: [\n    /* @__PURE__ */ jsxs(\"div\", { className: styles$4.header, children: [\n      /* @__PURE__ */ jsx(\"div\", { className: styles$4.time, children: timeStr }),\n      timeDurationStr && /* @__PURE__ */ jsx(\"div\", { className: styles$4.duration, children: timeDurationStr })\n    ] }),\n    renderEventPopupContent && renderedEvent && /* @__PURE__ */ jsx(\"div\", { className: styles$4.content, children: renderEventPopupContent(renderedEvent.event) })\n  ] });\n}\nconst EnhancedHoveredEvent = memo(HoveredEvent);\nconst mouseTime = \"_mouseTime_1n4o4_1\";\nconst time = \"_time_1n4o4_11\";\nconst showSeconds = \"_showSeconds_1n4o4_24\";\nconst styles$3 = {\n  mouseTime,\n  time,\n  showSeconds\n};\nfunction MouseTime({ timelineStore }) {\n  const ref = useRef(null);\n  const textRef = useRef(null);\n  const visibleRef = useRef(false);\n  const { $gridStepSize } = timelineStore.gridState;\n  const { $timeState, $mouseTime, $timelineSize } = timelineStore.viewState;\n  const { $viewTimeZone, $settings } = timelineStore;\n  const { showMouseTime } = useStore($settings);\n  useEffect(() => {\n    if (!showMouseTime) {\n      visibleRef.current = false;\n      return;\n    }\n    const $data = computed(\n      [$mouseTime, $timeState, $gridStepSize, $viewTimeZone, $timelineSize],\n      (mouseTime2, timeState, gridStepSize, viewTimeZone, timelineSize) => ({\n        mouseTime: mouseTime2,\n        timeState,\n        gridStepSize,\n        viewTimeZone,\n        timelineSize\n      })\n    );\n    const unsubscribe = $data.subscribe(({ mouseTime: mouseTime2, timeState, gridStepSize, viewTimeZone, timelineSize }) => {\n      if (!ref.current || !textRef.current) {\n        return;\n      }\n      if (!mouseTime2) {\n        if (visibleRef.current) {\n          visibleRef.current = false;\n          ref.current.style.display = \"none\";\n        }\n        return;\n      }\n      if (!visibleRef.current) {\n        visibleRef.current = true;\n        ref.current.style.display = \"block\";\n      }\n      const left = Math.round((mouseTime2 - timeState.start) / timeState.scale - 1);\n      const top = timelineSize.headerHeight;\n      ref.current.style.left = `${left}px`;\n      ref.current.style.top = `${top}px`;\n      const timeStr = stringifyTime(mouseTime2, gridStepSize, viewTimeZone);\n      textRef.current.innerHTML = \"\";\n      textRef.current.appendChild(document.createTextNode(timeStr));\n      if (gridStepSize < MINUTE_MS) {\n        textRef.current.classList.add(styles$3.showSeconds);\n      } else {\n        textRef.current.classList.remove(styles$3.showSeconds);\n      }\n    });\n    return () => {\n      unsubscribe();\n      $data.off();\n    };\n  }, [$mouseTime, $timeState, $gridStepSize, $viewTimeZone, $timelineSize, showMouseTime]);\n  if (!showMouseTime) {\n    return null;\n  }\n  return /* @__PURE__ */ jsx(\"div\", { className: styles$3.mouseTime, ref, children: /* @__PURE__ */ jsx(\"div\", { className: styles$3.time, ref: textRef }) });\n}\nconst EnhancedMouseTime = memo(MouseTime);\nconst renderedEvents = \"_renderedEvents_1kztm_1\";\nconst event = \"_event_1kztm_7\";\nconst styles$2 = {\n  renderedEvents,\n  event\n};\nfunction Event({ event: event2, rect, renderEventContent }) {\n  const content2 = useMemo(() => renderEventContent(event2), [event2, renderEventContent]);\n  return /* @__PURE__ */ jsx(\"div\", { className: styles$2.event, style: rect, children: content2 });\n}\nconst EnhancedEvent = memo(Event);\nfunction RenderedEvents({ timelineStore }) {\n  const ref = useRef(null);\n  const { $renderedEvents, $settings } = timelineStore;\n  const { $timelineSize } = timelineStore.viewState;\n  const { renderEventContent } = useStore($settings);\n  const renderedEvents2 = useStore($renderedEvents);\n  useEffect(() => {\n    return $timelineSize.subscribe((timelineSize) => {\n      if (!ref.current) {\n        return;\n      }\n      const { dataWidth, dataHeight } = timelineSize;\n      ref.current.style.width = `${dataWidth}px`;\n      ref.current.style.height = `${dataHeight}px`;\n    });\n  }, [$timelineSize, renderEventContent]);\n  if (!renderEventContent) {\n    return null;\n  }\n  return /* @__PURE__ */ jsx(\"div\", { className: styles$2.renderedEvents, ref, children: renderedEvents2.map(({ event: event2, rect }) => /* @__PURE__ */ jsx(EnhancedEvent, { rect, event: event2, renderEventContent }, event2.id)) });\n}\nconst EnhancedRenderedEvents = memo(RenderedEvents);\nconst sidebar = \"_sidebar_7zle8_1\";\nconst content = \"_content_7zle8_9\";\nconst row = \"_row_7zle8_16\";\nconst highlight = \"_highlight_7zle8_23\";\nconst needHighlight = \"_needHighlight_7zle8_33\";\nconst expanded = \"_expanded_7zle8_34\";\nconst highlightHovered = \"_highlightHovered_7zle8_35\";\nconst hovered = \"_hovered_7zle8_35\";\nconst rowContent = \"_rowContent_7zle8_39\";\nconst rowInside = \"_rowInside_7zle8_45\";\nconst rowTitle = \"_rowTitle_7zle8_52\";\nconst crossEventsStrategy = \"_crossEventsStrategy_7zle8_60\";\nconst loading = \"_loading_7zle8_72\";\nconst expander = \"_expander_7zle8_83\";\nconst icon = \"_icon_7zle8_98\";\nconst styles$1 = {\n  sidebar,\n  content,\n  row,\n  highlight,\n  needHighlight,\n  expanded,\n  highlightHovered,\n  hovered,\n  rowContent,\n  rowInside,\n  rowTitle,\n  crossEventsStrategy,\n  loading,\n  expander,\n  icon\n};\nfunction Loading({\n  timelineStore\n}) {\n  const ref = useRef(null);\n  const topRef = useRef(0);\n  const { $settings } = timelineStore;\n  const { $rowsLoading, $rowsIds, $rowsHeight, $rowsTop } = useStore(timelineStore.$rowsStore);\n  const loading2 = useStore($rowsLoading);\n  useEffect(() => {\n    if (!loading2) {\n      topRef.current = 0;\n      return;\n    }\n    const $data = computed([$rowsIds, $rowsTop, $rowsHeight, $settings], (rowsIds, rowsTop, rowsHeight, settings) => ({\n      rowsIds,\n      rowsTop,\n      rowsHeight,\n      settings\n    }));\n    const unsubscribe = $data.subscribe(({ rowsIds, rowsTop, rowsHeight, settings }) => {\n      let top = settings.dataViewPadding;\n      if (rowsIds.length > 0) {\n        const lastId = rowsIds[rowsIds.length - 1];\n        const lastRowTop = rowsTop[lastId];\n        const lastRowHeight = rowsHeight[lastId];\n        top = lastRowTop + lastRowHeight;\n      }\n      if (topRef.current !== top && ref.current) {\n        topRef.current = top;\n        ref.current.style.top = `${top}px`;\n      }\n    });\n    return () => {\n      unsubscribe();\n      $data.off();\n    };\n  }, [loading2, $rowsIds, $rowsHeight, $rowsTop, $settings]);\n  if (!loading2) {\n    return null;\n  }\n  return /* @__PURE__ */ jsx(\"div\", { className: styles$1.loading, ref, children: \"Loading...\" });\n}\nconst EnhancedLoading = memo(Loading);\nconst SvgChevronRightLine = (props) => /* @__PURE__ */ React.createElement(\"svg\", { width: 24, height: 24, viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", ...props }, /* @__PURE__ */ React.createElement(\"g\", { id: \"chevron-right-line\" }, /* @__PURE__ */ React.createElement(\"path\", { id: \"vector\", d: \"M8.00293 4.71191L15.2896 11.9985L8 19.2881\", stroke: \"currentColor\", strokeWidth: 1.8 })));\nfunction useRowConfig(timelineStore, row2) {\n  const { $rowsCrossEventsStrategy, $rowsNestedLevel, $rowsExpanded } = useStore(timelineStore.$rowsStore);\n  const [crossEventsStrategy2, setCrossEventsStrategy] = useState(\n    $rowsCrossEventsStrategy.get()[row2.id]\n  );\n  const [rowNestedLevel, setRowNestedLevel] = useState($rowsNestedLevel.get()[row2.id]);\n  const [rowExpanded, setRowExpanded] = useState($rowsExpanded.get()[row2.id]);\n  useEffect(() => {\n    const unsubscribeCrossEventsStrategy = $rowsCrossEventsStrategy.subscribe((rowsCrossEventsStrategy) => {\n      const newStrategy = rowsCrossEventsStrategy[row2.id];\n      if (crossEventsStrategy2 !== newStrategy) {\n        setCrossEventsStrategy(newStrategy);\n      }\n    });\n    const unsubscribeRowsNestedLevel = $rowsNestedLevel.subscribe((rowsNestedLevels) => {\n      const level = rowsNestedLevels[row2.id];\n      if (level !== rowNestedLevel) {\n        setRowNestedLevel(level);\n      }\n    });\n    const unsubscribeRowsExpanded = $rowsExpanded.subscribe((rowsExpanded) => {\n      const expanded2 = rowsExpanded[row2.id];\n      if (expanded2 !== rowExpanded) {\n        setRowExpanded(expanded2);\n      }\n    });\n    return () => {\n      unsubscribeCrossEventsStrategy();\n      unsubscribeRowsNestedLevel();\n      unsubscribeRowsExpanded();\n    };\n  }, [\n    $rowsCrossEventsStrategy,\n    $rowsNestedLevel,\n    $rowsExpanded,\n    row2,\n    crossEventsStrategy2,\n    rowNestedLevel,\n    rowExpanded\n  ]);\n  return [crossEventsStrategy2, rowNestedLevel, rowExpanded];\n}\nfunction renderRowDefault({\n  row: row2,\n  crossEventsStrategy: crossEventsStrategy2,\n  onChangeCrossEventsStrategy\n}) {\n  return /* @__PURE__ */ jsxs(\"div\", { className: styles$1.rowInside, children: [\n    /* @__PURE__ */ jsx(\"div\", { className: clsx(styles$1.rowTitle), children: row2.title }),\n    onChangeCrossEventsStrategy && /* @__PURE__ */ jsx(\n      \"div\",\n      {\n        className: styles$1.crossEventsStrategy,\n        onClick: () => onChangeCrossEventsStrategy(\n          crossEventsStrategy2 === \"split-crossed-events\" ? \"overlay-crossed-events\" : \"split-crossed-events\"\n        ),\n        children: crossEventsStrategy2 === \"split-crossed-events\" ? \"Split events\" : \"Overlay events\"\n      }\n    )\n  ] });\n}\nfunction getRowTotalHeight(rowId, rowsMap, rowsHeight, settings) {\n  let height = rowsHeight[rowId];\n  const { children } = rowsMap[rowId];\n  if (children) {\n    for (let i = 0; i < children.length; i++) {\n      const childRow = children[i];\n      height += getRowTotalHeight(childRow.id, rowsMap, rowsHeight);\n    }\n  }\n  return height;\n}\nfunction Row({\n  timelineStore,\n  row: row2\n}) {\n  const ref = useRef(null);\n  const highlightRef = useRef(null);\n  const topRef = useRef(0);\n  const heightRef = useRef(0);\n  const hoveredRef = useRef(false);\n  const { $hoveredRow, $settings } = timelineStore;\n  const { $rowsTop, $rowsHeight, $rowsCrossEventsStrategy, $rowsExpanded, $rowsMap } = useStore(\n    timelineStore.$rowsStore\n  );\n  const settings = useStore($settings);\n  const [crossEventsStrategy2, nestedLevel, expanded2] = useRowConfig(timelineStore, row2);\n  const hasChildren = Boolean($rowsMap.get()[row2.id].children);\n  const toggleExpanded = useCallback(() => {\n    $rowsExpanded.setKey(row2.id, !expanded2);\n  }, [$rowsExpanded, expanded2, row2]);\n  useEffect(() => {\n    return $hoveredRow.subscribe((hoveredRow) => {\n      if (!ref.current) {\n        hoveredRef.current = false;\n        return;\n      }\n      const isHovered = hoveredRow && hoveredRow[hoveredRow.length - 1] === row2.id;\n      if (isHovered && !hoveredRef.current) {\n        hoveredRef.current = true;\n        ref.current.classList.add(styles$1.hovered);\n      }\n      if (!isHovered && hoveredRef.current) {\n        hoveredRef.current = false;\n        ref.current.classList.remove(styles$1.hovered);\n      }\n    });\n  }, [row2, $hoveredRow]);\n  const setCrossEventsStrategy = useCallback(\n    (crossEventsStrategy22) => {\n      if (settings.canChangeCrossEventsStrategy) {\n        $rowsCrossEventsStrategy.setKey(row2.id, crossEventsStrategy22);\n      }\n    },\n    [$rowsCrossEventsStrategy, row2, settings]\n  );\n  useEffect(() => {\n    const rowsTop = $rowsTop.get();\n    const rowTop = rowsTop[row2.id];\n    const node = ref.current;\n    if (node) {\n      node.style.transform = `translate(0, ${rowTop}px)`;\n    }\n    const unsubscribeTop = $rowsTop.listen((value2) => {\n      const top = value2[row2.id];\n      if (topRef.current === top) {\n        return;\n      }\n      topRef.current = top;\n      const node2 = ref.current;\n      if (node2) {\n        node2.style.transform = `translate(0, ${top}px)`;\n      }\n    });\n    const unsubscribeHeight = $rowsHeight.subscribe((rowsHeight) => {\n      const height = rowsHeight[row2.id];\n      if (heightRef.current !== height) {\n        heightRef.current = height;\n        const node2 = ref.current;\n        if (node2) {\n          node2.style.height = `${height}px`;\n        }\n      }\n      if (highlightRef.current) {\n        const rowsMap = $rowsMap.get();\n        const rowHeight = getRowTotalHeight(row2.id, rowsMap, rowsHeight);\n        const highlightHeight = rowHeight - 2;\n        highlightRef.current.style.height = `${highlightHeight}px`;\n      }\n    });\n    return () => {\n      unsubscribeTop();\n      unsubscribeHeight();\n    };\n  }, [row2, $rowsTop, $rowsHeight, $rowsMap, settings]);\n  const renderOptions = useMemo(\n    () => ({\n      row: row2,\n      settings,\n      crossEventsStrategy: crossEventsStrategy2,\n      nestedLevel,\n      hasChildren,\n      expanded: expanded2,\n      onChangeCrossEventsStrategy: settings.canChangeCrossEventsStrategy ? setCrossEventsStrategy : null\n    }),\n    [row2, crossEventsStrategy2, setCrossEventsStrategy, hasChildren, expanded2, nestedLevel, settings]\n  );\n  const renderRow = settings.renderSidebarRowContent || renderRowDefault;\n  const content2 = /* @__PURE__ */ jsxs(\"div\", { className: styles$1.rowContent, style: { height: settings.rowPadding * 2 + settings.eventLineHeight - 2 }, children: [\n    hasChildren && /* @__PURE__ */ jsx(\"div\", { className: clsx(styles$1.expander), onClick: toggleExpanded, children: /* @__PURE__ */ jsx(SvgChevronRightLine, { className: styles$1.icon }) }),\n    renderRow(renderOptions)\n  ] });\n  return /* @__PURE__ */ jsx(\n    \"div\",\n    {\n      className: clsx(\n        styles$1.row,\n        hasChildren && styles$1.hasChildren,\n        settings.highlightHoveredRow && styles$1.highlightHovered,\n        expanded2 && styles$1.expanded,\n        nestedLevel === 0 && styles$1.needHighlight\n      ),\n      ref,\n      style: { left: nestedLevel * 32 },\n      children: /* @__PURE__ */ jsx(\"div\", { className: styles$1.highlight, ref: hasChildren && nestedLevel === 0 ? highlightRef : void 0, children: content2 })\n    }\n  );\n}\nconst EnhancedRow = memo(Row);\nfunction Content({\n  timelineStore\n}) {\n  const ref = useRef(null);\n  const { $containerScrollTop } = timelineStore.viewState;\n  const { $visibleRows, $rowsMap, $rowsExpanded } = useStore(timelineStore.$rowsStore);\n  const visibleRows = useStore($visibleRows);\n  const rowsMap = useStore($rowsMap);\n  const rowsExpanded = useStore($rowsExpanded);\n  const rowsList = useMemo(\n    () => getNestedRowsIds(visibleRows, rowsMap, rowsExpanded),\n    [visibleRows, rowsMap, rowsExpanded]\n  );\n  useEffect(() => {\n    return $containerScrollTop.subscribe((top) => {\n      if (ref.current) {\n        ref.current.style.top = `${-top}px`;\n      }\n    });\n  }, [$containerScrollTop]);\n  return /* @__PURE__ */ jsxs(\"div\", { className: styles$1.content, ref, children: [\n    rowsList.map((id) => /* @__PURE__ */ jsx(EnhancedRow, { row: rowsMap[id], timelineStore }, id)),\n    /* @__PURE__ */ jsx(EnhancedLoading, { timelineStore })\n  ] });\n}\nfunction Sidebar({\n  timelineStore\n}) {\n  const ref = useRef(null);\n  const { $timelineSize } = timelineStore.viewState;\n  const { $settings } = timelineStore;\n  const { showSidebar } = useStore($settings);\n  useEffect(() => {\n    if (!showSidebar) {\n      return;\n    }\n    return $timelineSize.subscribe(({ sidebarWidth, sidebarHeight, headerHeight }) => {\n      if (ref.current) {\n        ref.current.style.width = `${sidebarWidth}px`;\n        ref.current.style.height = `${sidebarHeight}px`;\n        ref.current.style.top = `${headerHeight}px`;\n      }\n    });\n  }, [$timelineSize, showSidebar]);\n  if (!showSidebar) {\n    return null;\n  }\n  return /* @__PURE__ */ jsx(\"div\", { className: styles$1.sidebar, ref, children: /* @__PURE__ */ jsx(Content, { timelineStore }) });\n}\nconst EnhancedSidebar = memo(Sidebar);\nconst ANIMATION_DISTANCE_FACTOR = 500;\nfunction initEventsTopAnimation(requestRender) {\n  let positions = /* @__PURE__ */ new Map();\n  const animatingEventsTop = /* @__PURE__ */ new Map();\n  const animationState = /* @__PURE__ */ new Map();\n  const animateEventTop = (eventId, topFrom, topTo) => {\n    let animationController = animationState.get(eventId);\n    if (!animationController) {\n      animatingEventsTop.set(eventId, topFrom);\n      animationController = initAnimationController(\n        topFrom,\n        (value2) => {\n          animatingEventsTop.set(eventId, value2);\n          requestRender();\n        },\n        () => {\n          animationState.delete(eventId);\n          animatingEventsTop.delete(eventId);\n          animationController == null ? void 0 : animationController.reset();\n          requestRender();\n        }\n      );\n      animationState.set(eventId, animationController);\n    }\n    animationController.move(topTo, ANIMATION_DISTANCE_FACTOR);\n  };\n  const requestEventTopAnimation = (eventId, position) => {\n    const currentPosition = positions.get(eventId);\n    let eventTop = position.top;\n    if (currentPosition && (currentPosition.rowId !== position.rowId || currentPosition.lineIndex !== position.lineIndex)) {\n      animateEventTop(eventId, currentPosition.top, position.top);\n    }\n    const animatingTop = animatingEventsTop.get(eventId);\n    if (animatingTop !== void 0) {\n      eventTop = animatingTop;\n      const animationController = animationState.get(eventId);\n      if (animationController) {\n        animationController.move(position.top, ANIMATION_DISTANCE_FACTOR);\n      }\n    }\n    return eventTop;\n  };\n  const updateEventsPositions = (newPositions) => {\n    positions = newPositions;\n  };\n  const eventsTopAnimation = {\n    updateEventsPositions,\n    requestEventTopAnimation\n  };\n  const reset = () => {\n    animationState.forEach((item) => item.reset());\n  };\n  return [eventsTopAnimation, reset];\n}\nconst ANGLE_RIGHT$1 = 0;\nconst ANGLE_BOTTOM$1 = Math.PI / 2;\nconst ANGLE_LEFT$1 = Math.PI;\nconst ANGLE_TOP$1 = 3 * Math.PI / 2;\nconst EVENT_MIN_WIDTH$3 = 1;\nfunction renderActiveEvent(event2, colors, ctx, left, top, width, height, borderRadius) {\n  const gap = 3 * DEVICE_PIXEL_RATIO;\n  left = left - gap;\n  top = top - gap;\n  width = width + gap * 2;\n  height = height + gap * 2;\n  borderRadius = borderRadius + gap;\n  const radius = Math.round(Math.min(borderRadius, width / 2, height / 2));\n  if (radius <= EVENT_MIN_WIDTH$3 * DEVICE_PIXEL_RATIO) {\n    ctx.fillRect(left, top, width, height);\n    return;\n  }\n  ctx.strokeStyle = event2.highlightColor || event2.color || colors.eventActiveStroke;\n  ctx.lineWidth = DEVICE_PIXEL_RATIO * 2;\n  ctx.beginPath();\n  ctx.moveTo(left, top + radius);\n  ctx.arc(left + radius, top + radius, radius, ANGLE_LEFT$1, ANGLE_TOP$1);\n  ctx.lineTo(left + width - radius, top);\n  ctx.arc(left + width - radius, top + radius, radius, ANGLE_TOP$1, ANGLE_RIGHT$1);\n  ctx.lineTo(left + width, top + height - radius);\n  ctx.arc(left + width - radius, top + height - radius, radius, ANGLE_RIGHT$1, ANGLE_BOTTOM$1);\n  ctx.lineTo(left + radius, top + height);\n  ctx.arc(left + radius, top + height - radius, radius, ANGLE_BOTTOM$1, ANGLE_LEFT$1);\n  ctx.lineTo(left, top + radius);\n  ctx.stroke();\n}\nconst ANGLE_RIGHT = 0;\nconst ANGLE_BOTTOM = Math.PI / 2;\nconst ANGLE_LEFT = Math.PI;\nconst ANGLE_TOP = 3 * Math.PI / 2;\nconst EVENT_MIN_WIDTH$2 = 1;\nfunction renderBorderRadiusEvent(ctx, left, top, width, height, borderRadius) {\n  const radius = Math.round(Math.min(borderRadius, width / 2, height / 2));\n  if (radius <= EVENT_MIN_WIDTH$2 * DEVICE_PIXEL_RATIO) {\n    ctx.fillRect(left, top, width, height);\n    return;\n  }\n  ctx.beginPath();\n  ctx.moveTo(left, top + radius);\n  ctx.arc(left + radius, top + radius, radius, ANGLE_LEFT, ANGLE_TOP);\n  ctx.lineTo(left + width - radius, top);\n  ctx.arc(left + width - radius, top + radius, radius, ANGLE_TOP, ANGLE_RIGHT);\n  ctx.lineTo(left + width, top + height - radius);\n  ctx.arc(left + width - radius, top + height - radius, radius, ANGLE_RIGHT, ANGLE_BOTTOM);\n  ctx.lineTo(left + radius, top + height);\n  ctx.arc(left + radius, top + height - radius, radius, ANGLE_BOTTOM, ANGLE_LEFT);\n  ctx.lineTo(left, top + radius);\n  ctx.fill();\n}\nconst EVENT_MIN_WIDTH$1 = 1;\nconst getRenderedEventSetter = (renderedEvents2, settings) => (event2, canvasLeft, canvasTop, canvasWidth, canvasHeight) => {\n  const width = Math.round(canvasWidth / DEVICE_PIXEL_RATIO);\n  if (width >= settings.eventContentMinWidth) {\n    const top = Math.round(canvasTop / DEVICE_PIXEL_RATIO);\n    const left = Math.round(canvasLeft / DEVICE_PIXEL_RATIO);\n    const height = Math.round(canvasHeight / DEVICE_PIXEL_RATIO);\n    renderedEvents2.push({ rect: { left, top, width, height }, event: event2 });\n  }\n};\nfunction renderEvents(ctx, timeState, containerScrollTop, timelineSize, visibleRows, rowsTop, rowsEvents, hoveredEvent2, settings, eventsTopAnimation, rowsMap, activeEvent2, colors) {\n  const rowsIds = getNestedRowsIds(visibleRows, rowsMap);\n  const hoveredEventId = settings.highlightHoveredEvent && (hoveredEvent2 == null ? void 0 : hoveredEvent2.event.id);\n  const activeEventId = settings.highlightHoveredEvent && (activeEvent2 == null ? void 0 : activeEvent2.id);\n  const { sidebarWidth, dataHeight, dataWidth } = timelineSize;\n  const canvasWidth = dataWidth * DEVICE_PIXEL_RATIO;\n  const canvasHeight = dataHeight * DEVICE_PIXEL_RATIO;\n  let hoveredEventRect = null;\n  let activeEventRect = null;\n  const nextEventsPositions = /* @__PURE__ */ new Map();\n  const borderRadius = settings.eventBorderRadius * DEVICE_PIXEL_RATIO;\n  const renderedEvents2 = [];\n  const setRenderedEvent = settings.renderEventContent ? getRenderedEventSetter(renderedEvents2, settings) : null;\n  for (let rowIndex = 0; rowIndex < rowsIds.length; rowIndex++) {\n    const rowId = rowsIds[rowIndex];\n    const rowEventsLines = rowsEvents[rowId];\n    const rowTop = (rowsTop[rowId] - containerScrollTop) * DEVICE_PIXEL_RATIO;\n    if (rowEventsLines && rowEventsLines.length > 0) {\n      for (let lineIndex = 0; lineIndex < rowEventsLines.length; lineIndex++) {\n        const lineEvents = rowEventsLines[lineIndex];\n        const lineTop = Math.round(\n          lineIndex * (settings.eventLineHeight + settings.eventLineMargin) * DEVICE_PIXEL_RATIO\n        );\n        for (let eventIndex = 0; eventIndex < lineEvents.length; eventIndex++) {\n          const event2 = lineEvents[eventIndex];\n          const left = Math.round(\n            ((event2.start - timeState.start) / timeState.scale - sidebarWidth) * DEVICE_PIXEL_RATIO\n          );\n          let top = lineTop + rowTop + settings.rowPadding * DEVICE_PIXEL_RATIO;\n          const width = Math.max(\n            Math.round((event2.end - event2.start) / timeState.scale * DEVICE_PIXEL_RATIO),\n            EVENT_MIN_WIDTH$1\n          );\n          const height = settings.eventLineHeight * DEVICE_PIXEL_RATIO;\n          if (left + width < 0 || left > canvasWidth || top + height < 0 || top > canvasHeight) {\n            continue;\n          }\n          const eventPosition = { rowId, lineIndex, top };\n          nextEventsPositions.set(event2.id, eventPosition);\n          top = eventsTopAnimation.requestEventTopAnimation(event2.id, eventPosition);\n          ctx.fillStyle = event2.color;\n          if (event2.id === activeEventId) {\n            activeEventRect = {\n              left,\n              top,\n              width,\n              height\n            };\n          } else if (event2.id === hoveredEventId) {\n            hoveredEventRect = {\n              left,\n              top,\n              width,\n              height\n            };\n          } else {\n            if (borderRadius === 0) {\n              ctx.fillRect(left, top, width, height);\n            } else {\n              renderBorderRadiusEvent(ctx, left, top, width, height, borderRadius);\n            }\n          }\n          if (setRenderedEvent) {\n            setRenderedEvent(event2, left, top, width, height);\n          }\n        }\n      }\n    }\n  }\n  if (hoveredEventRect) {\n    const { left, top, width, height } = hoveredEventRect;\n    let gap = DEVICE_PIXEL_RATIO;\n    if (hoveredEvent2) {\n      if (hoveredEvent2.event.highlightColor) {\n        gap = 0;\n        ctx.fillStyle = hoveredEvent2.event.highlightColor;\n      } else {\n        ctx.fillStyle = hoveredEvent2.event.color;\n      }\n    }\n    if (borderRadius === 0) {\n      ctx.fillRect(left - gap, top - gap, width + gap * 2, height + gap * 2);\n    } else {\n      renderBorderRadiusEvent(ctx, left - gap, top - gap, width + gap * 2, height + gap * 2, borderRadius + gap);\n    }\n  }\n  if (activeEventRect) {\n    const { left, top, width, height } = activeEventRect;\n    let gap = DEVICE_PIXEL_RATIO;\n    if (activeEvent2) {\n      if (activeEvent2.highlightColor) {\n        gap = 0;\n        ctx.fillStyle = activeEvent2.highlightColor;\n      } else {\n        ctx.fillStyle = activeEvent2.color;\n      }\n    }\n    if (borderRadius === 0) {\n      ctx.fillRect(left - gap, top - gap, width + gap * 2, height + gap * 2);\n    } else {\n      renderBorderRadiusEvent(ctx, left - gap, top - gap, width + gap * 2, height + gap * 2, borderRadius + gap);\n    }\n    if (activeEvent2) {\n      renderActiveEvent(\n        activeEvent2,\n        colors,\n        ctx,\n        left - gap,\n        top - gap,\n        width + gap * 2,\n        height + gap * 2,\n        borderRadius + gap\n      );\n    }\n  }\n  eventsTopAnimation.updateEventsPositions(nextEventsPositions);\n  return renderedEvents2;\n}\nfunction renderGrid(ctx, gridSteps, timeState, timelineSize, colors) {\n  const height = timelineSize.dataHeight * DEVICE_PIXEL_RATIO;\n  const sidebarWidth = timelineSize.sidebarWidth;\n  ctx.fillStyle = colors.border;\n  for (let i = 0; i < gridSteps.length; i++) {\n    const time2 = gridSteps[i];\n    const left = Math.round((time2 - timeState.start) / timeState.scale - sidebarWidth);\n    const lineWidth = 1 * DEVICE_PIXEL_RATIO;\n    ctx.fillRect(left * DEVICE_PIXEL_RATIO, 0, lineWidth, height);\n  }\n}\nfunction renderHoveredRow(ctx, hoveredRow, rowsTop, rowsHeight, containerScrollTop, timelineSize, colors) {\n  if (hoveredRow === null) {\n    return;\n  }\n  ctx.fillStyle = colors.rowHoverBg;\n  const lastHoveredRow = hoveredRow[hoveredRow.length - 1];\n  const rowTop = rowsTop[lastHoveredRow];\n  const rowHeight = rowsHeight[lastHoveredRow];\n  const { width } = timelineSize;\n  const left = 0;\n  const top = rowTop - containerScrollTop;\n  ctx.fillRect(\n    left * DEVICE_PIXEL_RATIO,\n    top * DEVICE_PIXEL_RATIO,\n    width * DEVICE_PIXEL_RATIO,\n    rowHeight * DEVICE_PIXEL_RATIO\n  );\n}\nfunction initRenderer(ctx, viewState, gridState, $visibleRows, $rowsTop, $rowsHeight, $rowsEvents, $hoveredRow, $hoveredEvent, $colors, $settings, $renderedEvents, $rowsMap, $activeEvent) {\n  const { $timelineSize, $timeState, $containerScrollTop } = viewState;\n  const { $gridSteps } = gridState;\n  const $data = computed(\n    [\n      $timelineSize,\n      $gridSteps,\n      $timeState,\n      $containerScrollTop,\n      $visibleRows,\n      $rowsTop,\n      $rowsHeight,\n      $rowsEvents,\n      $hoveredRow,\n      $hoveredEvent,\n      $colors,\n      $settings,\n      $rowsMap,\n      $activeEvent\n    ],\n    (timelineSize, gridSteps, timeState, containerScrollTop, visibleRows, rowsTop, rowsHeight, rowsEvents, hoveredRow, hoveredEvent2, colors, settings, rowsMap, activeEvent2) => ({\n      timelineSize,\n      gridSteps,\n      timeState,\n      containerScrollTop,\n      visibleRows,\n      rowsTop,\n      rowsHeight,\n      rowsEvents,\n      hoveredRow,\n      hoveredEvent: hoveredEvent2,\n      colors,\n      settings,\n      rowsMap,\n      activeEvent: activeEvent2\n    })\n  );\n  const [eventsTopAnimation, resetEventsAnimation] = initEventsTopAnimation(() => requestRender());\n  const render = () => {\n    const {\n      timelineSize,\n      gridSteps,\n      timeState,\n      containerScrollTop,\n      visibleRows,\n      rowsTop,\n      rowsHeight,\n      rowsEvents,\n      hoveredRow,\n      hoveredEvent: hoveredEvent2,\n      colors,\n      settings,\n      rowsMap,\n      activeEvent: activeEvent2\n    } = $data.get();\n    const width = timelineSize.dataWidth * DEVICE_PIXEL_RATIO;\n    const height = timelineSize.dataHeight * DEVICE_PIXEL_RATIO;\n    ctx.clearRect(0, 0, width, height);\n    if (settings.renderGridLines) {\n      renderGrid(ctx, gridSteps, timeState, timelineSize, colors);\n    }\n    if (settings.highlightHoveredRow) {\n      renderHoveredRow(ctx, hoveredRow, rowsTop, rowsHeight, containerScrollTop, timelineSize, colors);\n    }\n    const renderedEvents2 = renderEvents(\n      ctx,\n      timeState,\n      containerScrollTop,\n      timelineSize,\n      visibleRows,\n      rowsTop,\n      rowsEvents,\n      hoveredEvent2,\n      settings,\n      eventsTopAnimation,\n      rowsMap,\n      activeEvent2,\n      colors\n    );\n    if (settings.renderEventContent) {\n      $renderedEvents.set(renderedEvents2);\n    }\n  };\n  let renderPlanned = false;\n  const requestRender = () => {\n    if (renderPlanned) {\n      return;\n    }\n    renderPlanned = true;\n    requestAnimationFrame(() => {\n      render();\n      renderPlanned = false;\n    });\n  };\n  const unsubscribe = $data.subscribe(requestRender);\n  const reset = () => {\n    unsubscribe();\n    resetEventsAnimation();\n    $data.off();\n  };\n  return reset;\n}\nfunction updateSize(canvasNode, $timelineSize) {\n  return $timelineSize.subscribe((timelineSize) => {\n    const width = timelineSize.dataWidth;\n    const height = timelineSize.dataHeight;\n    canvasNode.style.width = `${width}px`;\n    canvasNode.style.height = `${height}px`;\n    canvasNode.width = width * DEVICE_PIXEL_RATIO;\n    canvasNode.height = height * DEVICE_PIXEL_RATIO;\n  });\n}\nfunction initCanvas(canvasNode, viewState, gridState, $rowsStore, $rowsEvents, $hoveredRow, $hoveredEvent, $colors, $settings, $renderedEvents, $activeEvent) {\n  const { $timelineSize } = viewState;\n  const unsubscribe = updateSize(canvasNode, $timelineSize);\n  const ctx = canvasNode.getContext(\"2d\");\n  let resetRenderer = null;\n  const unsubscribeRowsStore = $rowsStore.subscribe((rowsStore) => {\n    if (resetRenderer) {\n      resetRenderer();\n    }\n    const { $visibleRows, $rowsTop, $rowsHeight, $rowsMap } = rowsStore;\n    resetRenderer = initRenderer(\n      ctx,\n      viewState,\n      gridState,\n      $visibleRows,\n      $rowsTop,\n      $rowsHeight,\n      $rowsEvents,\n      $hoveredRow,\n      $hoveredEvent,\n      $colors,\n      $settings,\n      $renderedEvents,\n      $rowsMap,\n      $activeEvent\n    );\n  });\n  const reset = () => {\n    unsubscribe();\n    unsubscribeRowsStore();\n    if (resetRenderer) {\n      resetRenderer();\n    }\n  };\n  return reset;\n}\nconst transparentColor = \"rgba(0,0,0,0)\";\nconst whiteColor = \"#ffffff\";\nfunction getColors(timelineNode) {\n  const style = getComputedStyle(timelineNode);\n  const background = style.getPropertyValue(\"--timeline--background-color\") || whiteColor;\n  const border = style.getPropertyValue(\"--timeline--border-tertiary-color\") || transparentColor;\n  const rowHoverBg = style.getPropertyValue(\"--timeline--background-secondary-color\") || transparentColor;\n  const eventHoverStroke = style.getPropertyValue(\"--timeline--event-hover-stroke-color\") || transparentColor;\n  const eventActiveStroke = style.getPropertyValue(\"--timeline--event-active-stroke-color\") || transparentColor;\n  return { background, border, rowHoverBg, eventHoverStroke, eventActiveStroke };\n}\nfunction initColors(timelineNode) {\n  const [$colors, reset] = createAtom(getColors(timelineNode));\n  const updateColors = () => {\n    $colors.set(getColors(timelineNode));\n  };\n  return [$colors, updateColors, reset];\n}\nfunction initCurrentTime() {\n  const [$currentTime, resetAtom] = createAtom(Date.now());\n  const interval = setInterval(() => {\n    $currentTime.set(Date.now());\n  }, 5e3);\n  const reset = () => {\n    clearInterval(interval);\n    resetAtom();\n  };\n  return [$currentTime, reset];\n}\nfunction initLoader(storage, getEvents2, eventsLoadStepSize) {\n  let stopped = false;\n  const activeSet = /* @__PURE__ */ new Set();\n  const queueSet = /* @__PURE__ */ new Set();\n  const queue = [];\n  const processQueue = async () => {\n    if (stopped || queue.length === 0 || activeSet.size >= MAX_PARALLEL_EVENTS_REQUEST) {\n      return;\n    }\n    const { rowId, from } = queue.shift();\n    const key = `${rowId}-${from}`;\n    queueSet.delete(key);\n    activeSet.add(key);\n    const events = await getEvents2(rowId, from, from + eventsLoadStepSize);\n    if (stopped) {\n      return;\n    }\n    storage.set(rowId, from, events);\n    activeSet.delete(key);\n    processQueue();\n  };\n  const load = (rowId, from) => {\n    if (stopped || storage.getChunk(rowId, from)) {\n      return;\n    }\n    const key = `${rowId}-${from}`;\n    if (activeSet.has(key) || queueSet.has(key)) {\n      return;\n    }\n    queue.push({ rowId, from });\n    queueSet.add(key);\n    processQueue();\n  };\n  const cancel = (rowId, from) => {\n    if (stopped) {\n      return;\n    }\n    const key = `${rowId}-${from}`;\n    if (queueSet.has(key)) {\n      const index = queue.findIndex((value2) => value2.from === from && value2.rowId === rowId);\n      if (index) {\n        queue.splice(index, 1);\n        queueSet.delete(key);\n      }\n    }\n  };\n  const reset = () => {\n    stopped = true;\n  };\n  return [load, cancel, reset];\n}\nfunction initStorage(dataTZOffset, eventsLoadStepSize) {\n  const storage = new EventsStorage(dataTZOffset, eventsLoadStepSize);\n  const reset = () => {\n    storage.reset();\n  };\n  return [storage, reset];\n}\nfunction getDiff(currentVisibleCells, eventsLoadSteps, visibleRows, rowsMap) {\n  const allRowsIds = getNestedRowsIds(visibleRows, rowsMap);\n  const newVisibleCells = /* @__PURE__ */ new Map();\n  const added = [];\n  const rowsIds = allRowsIds.filter((rowId) => {\n    const rowItem = rowsMap[rowId];\n    return !rowItem.noEvents;\n  });\n  for (let i = 0; i < eventsLoadSteps.length; i++) {\n    for (let j = 0; j < rowsIds.length; j++) {\n      const from = eventsLoadSteps[i];\n      const rowId = rowsIds[j];\n      const key = `${rowId}-${from}`;\n      const option = { rowId, from };\n      newVisibleCells.set(key, option);\n      if (currentVisibleCells.has(key)) {\n        currentVisibleCells.delete(key);\n      } else {\n        added.push(option);\n      }\n    }\n  }\n  const removed = Array.from(currentVisibleCells.values());\n  return [newVisibleCells, added, removed];\n}\nfunction initVisibleEventsLoader($viewRangeTime, rowsStore, loadEvents, cancelLoadEvents, dataTZOffset, eventsLoadStepSize) {\n  let hash = \"\";\n  let currentVisibleCells = /* @__PURE__ */ new Map();\n  const $eventsLoadSteps = computed(\n    $viewRangeTime,\n    (viewRangeTime) => getEventsLoadSteps(viewRangeTime, eventsLoadStepSize, dataTZOffset)\n  );\n  const { $visibleRows, $rowsMap } = rowsStore;\n  const $data = computed([$eventsLoadSteps, $visibleRows, $rowsMap], (eventsLoadSteps, visibleRows, rowsMap) => ({\n    eventsLoadSteps,\n    visibleRows,\n    rowsMap\n  }));\n  const unsubscribe = $data.subscribe(({ eventsLoadSteps, visibleRows, rowsMap }) => {\n    const newHash = `${eventsLoadSteps.join(\"-\")}:${visibleRows.join(\"-\")}`;\n    if (hash === newHash) {\n      return;\n    }\n    hash = newHash;\n    const [newVisibleCells, added, removed] = getDiff(currentVisibleCells, eventsLoadSteps, visibleRows, rowsMap);\n    currentVisibleCells = newVisibleCells;\n    added.forEach(({ rowId, from }) => loadEvents(rowId, from));\n    removed.forEach(({ rowId, from }) => cancelLoadEvents(rowId, from));\n  });\n  const reset = () => {\n    unsubscribe();\n    $data.off();\n    $eventsLoadSteps.off();\n  };\n  return reset;\n}\nfunction createEvents($rowsStore, viewState, getEvents2, eventsLoadStepSize) {\n  const dataTZOffset = getUserTimeZoneOffset();\n  const { $viewRangeTime } = viewState;\n  const [storage, resetStorage] = initStorage(dataTZOffset, eventsLoadStepSize);\n  const [loadEvents, cancelLoadEvents, resetLoader] = initLoader(storage, getEvents2, eventsLoadStepSize);\n  let activeLoaderReset = null;\n  const rowsStoreUnsubscribe = $rowsStore.subscribe((rowsStore) => {\n    if (activeLoaderReset) {\n      activeLoaderReset();\n    }\n    activeLoaderReset = initVisibleEventsLoader(\n      $viewRangeTime,\n      rowsStore,\n      loadEvents,\n      cancelLoadEvents,\n      dataTZOffset,\n      eventsLoadStepSize\n    );\n  });\n  const reset = () => {\n    resetStorage();\n    resetLoader();\n    rowsStoreUnsubscribe();\n    if (activeLoaderReset) {\n      activeLoaderReset();\n    }\n  };\n  const eventsStore = {\n    storage\n  };\n  return [eventsStore, reset];\n}\nfunction initEvents($rowsStore, viewState, getEvents2, eventsLoadStepSize) {\n  let [eventsStore, resetEventsStore] = createEvents($rowsStore, viewState, getEvents2, eventsLoadStepSize);\n  const $eventsStore = atom(eventsStore);\n  const reInitEvents = (newGetEvents, newEventsLoadStepSize) => {\n    resetEventsStore();\n    [eventsStore, resetEventsStore] = createEvents($rowsStore, viewState, newGetEvents, newEventsLoadStepSize);\n    $eventsStore.set(eventsStore);\n  };\n  const reset = () => {\n    resetEventsStore();\n  };\n  return [$eventsStore, reInitEvents, reset];\n}\nfunction initGridStepSize($timeState) {\n  const $gridStepSize = computed($timeState, (timeState) => getGridStepSize(timeState.scale));\n  const reset = () => {\n    $gridStepSize.off();\n  };\n  return [$gridStepSize, reset];\n}\nfunction getRange(viewRange, gridStepSize, viewTimeZone) {\n  const [viewStart, viewEnd] = viewRange;\n  const start = fitTimeToStepSize(viewStart, gridStepSize, viewTimeZone.offset);\n  const end = fitTimeToStepSize(viewEnd + gridStepSize, gridStepSize, viewTimeZone.offset);\n  return [start, end];\n}\nfunction initGridSteps($viewRangeTime, $gridStepSize, $viewTimeZone) {\n  const [$range, resetRange] = createAtom(\n    getRange($viewRangeTime.get(), $gridStepSize.get(), $viewTimeZone.get())\n  );\n  const $data = computed([$viewRangeTime, $viewTimeZone], (viewRangeTime, viewTimeZone) => ({\n    viewRangeTime,\n    viewTimeZone\n  }));\n  const unsubscribeData = $data.listen(({ viewRangeTime, viewTimeZone }) => {\n    const [oldStart, oldEnd] = $range.get();\n    const [newStart, newEnd] = getRange(viewRangeTime, $gridStepSize.get(), viewTimeZone);\n    if (newStart !== oldStart || newEnd !== oldEnd) {\n      $range.set([newStart, newEnd]);\n    }\n  });\n  const $gridSteps = computed(\n    [$range, $gridStepSize],\n    ([rangeStart, rangeEnd], gridStepSize) => {\n      let gridStep2 = rangeStart;\n      const gridSteps = [gridStep2];\n      while (gridStep2 < rangeEnd) {\n        gridStep2 += gridStepSize;\n        gridSteps.push(gridStep2);\n      }\n      return gridSteps;\n    }\n  );\n  const reset = () => {\n    $gridSteps.off();\n    resetRange();\n    unsubscribeData();\n  };\n  return [$gridSteps, reset];\n}\nfunction initGridState(viewState, $viewTimeZone) {\n  const { $timeState, $viewRangeTime } = viewState;\n  const [$gridStepSize, resetGridStepSize] = initGridStepSize($timeState);\n  const [$gridSteps, resetGridSteps] = initGridSteps($viewRangeTime, $gridStepSize, $viewTimeZone);\n  const gridState = {\n    $gridStepSize,\n    $gridSteps\n  };\n  const reset = () => {\n    resetGridStepSize();\n    resetGridSteps();\n  };\n  return [gridState, reset];\n}\nconst EVENT_MIN_WIDTH = 1;\nfunction getHoveredEvent($dragging, $hoveredRow, $timelineSize, $rowsTop, $containerScrollTop, $rowsEvents, $timeState, $activeEvent, settings, coords) {\n  const dragging2 = $dragging.get();\n  if (dragging2) {\n    return null;\n  }\n  const hoveredRows = $hoveredRow.get();\n  const lastHoveredRow = hoveredRows && hoveredRows[hoveredRows.length - 1] || null;\n  if (lastHoveredRow === null) {\n    return null;\n  }\n  const { headerHeight, sidebarWidth, width, activeEventPanelWidth } = $timelineSize.get();\n  if (coords.top < headerHeight || coords.left < sidebarWidth) {\n    return null;\n  }\n  const activeEvent2 = $activeEvent.get();\n  if (activeEvent2 && coords.left > width - activeEventPanelWidth) {\n    return null;\n  }\n  const rowsTop = $rowsTop.get();\n  const containerScrollTop = $containerScrollTop.get();\n  const rowTop = rowsTop[lastHoveredRow] - containerScrollTop;\n  const lineTop = rowTop + settings.rowPadding - settings.eventLineMargin;\n  const mouseTop = coords.top - headerHeight;\n  const diff = mouseTop - lineTop;\n  if (diff < 0) {\n    return null;\n  }\n  const lineStepSize = settings.eventLineHeight + settings.eventLineMargin;\n  if (diff % lineStepSize < settings.eventLineMargin) {\n    return null;\n  }\n  const lineIndex = Math.floor(diff / lineStepSize);\n  const rowsEvents = $rowsEvents.get();\n  const rowEvent = rowsEvents[lastHoveredRow];\n  const events = rowEvent && rowEvent[lineIndex];\n  if (!events || events.length === 0) {\n    return null;\n  }\n  const timeState = $timeState.get();\n  const mouseTime2 = timeState.start + coords.left * timeState.scale;\n  const pixelTimeWidth = timeState.scale;\n  let hoveredEvent2 = null;\n  for (let i = 0; i < events.length; i++) {\n    const event2 = events[i];\n    const start = event2.start;\n    const end = Math.max(event2.end, event2.start + pixelTimeWidth * 2);\n    if (start < mouseTime2 && end > mouseTime2) {\n      hoveredEvent2 = event2;\n      break;\n    }\n  }\n  if (hoveredEvent2) {\n    const top = Math.round(\n      rowTop + settings.rowPadding + lineIndex * (settings.eventLineHeight + settings.eventLineMargin)\n    );\n    const height = settings.eventLineHeight;\n    const left = Math.round((hoveredEvent2.start - timeState.start) / timeState.scale - sidebarWidth);\n    const width2 = Math.max(Math.round((hoveredEvent2.end - hoveredEvent2.start) / timeState.scale), EVENT_MIN_WIDTH);\n    return { event: hoveredEvent2, rect: { top, left, height, width: width2 } };\n  }\n  return null;\n}\nfunction initHoveredEvent(viewState, $rowsStore, $hoveredRow, $rowsEvents, $settings) {\n  const { $timelineSize, $containerScrollTop, $timeState, $mouseCoords, $mouseInside, $dragging, $activeEventVisible } = viewState;\n  const [$hoveredEvent, resetHoveredEvent] = createAtom(null);\n  const [$activeEvent, resetActiveEvent] = createAtom(null);\n  let resetDataSubscribtion = null;\n  const $data = computed([$rowsStore, $settings], (rowsStore, settings) => ({ rowsStore, settings }));\n  const unsubscribeData = $data.subscribe(({ rowsStore, settings }) => {\n    if (resetDataSubscribtion) {\n      resetDataSubscribtion();\n      resetDataSubscribtion = null;\n    }\n    if (!settings.showHoveredEventPopup && !settings.highlightHoveredEvent && !settings.renderActiveEvent) {\n      return;\n    }\n    const { $rowsTop } = rowsStore;\n    const unsubscribeMouseCoords = $mouseCoords.listen((coords) => {\n      const hoveredEvent2 = getHoveredEvent(\n        $dragging,\n        $hoveredRow,\n        $timelineSize,\n        $rowsTop,\n        $containerScrollTop,\n        $rowsEvents,\n        $timeState,\n        $activeEvent,\n        settings,\n        coords\n      );\n      if ($hoveredEvent.get() !== hoveredEvent2) {\n        $hoveredEvent.set(hoveredEvent2);\n      }\n    });\n    const unsubscribeContainerScrollTop = $containerScrollTop.listen(() => $hoveredEvent.set(null));\n    const unsubscribeTimeState = $timeState.listen(() => $hoveredEvent.set(null));\n    const unsubscribeMouseInside = $mouseInside.listen((value2) => {\n      if (!value2) {\n        $hoveredEvent.set(null);\n      }\n    });\n    resetDataSubscribtion = () => {\n      unsubscribeMouseCoords();\n      unsubscribeContainerScrollTop();\n      unsubscribeTimeState();\n      unsubscribeMouseInside();\n    };\n  });\n  const onClick = () => {\n    const dragging2 = $dragging.get();\n    const settings = $settings.get();\n    if (dragging2 || !settings.renderActiveEvent) {\n      return;\n    }\n    const { width, activeEventPanelWidth } = $timelineSize.get();\n    const { left } = $mouseCoords.get();\n    const activeEvent2 = $activeEvent.get();\n    const hoveredEvent2 = $hoveredEvent.get();\n    if (!hoveredEvent2) {\n      if (activeEvent2) {\n        if (left < width - activeEventPanelWidth) {\n          $activeEvent.set(null);\n        }\n      }\n      return;\n    }\n    $activeEvent.set(hoveredEvent2.event);\n  };\n  const unsubscribeActiveEventMouseInside = $mouseInside.subscribe((isMouseInside) => {\n    if (isMouseInside) {\n      document.addEventListener(\"click\", onClick);\n    } else {\n      document.removeEventListener(\"click\", onClick);\n    }\n  });\n  const unsubscribeActiveEvent = $activeEvent.subscribe((activeEvent2) => $activeEventVisible.set(Boolean(activeEvent2)));\n  const reset = () => {\n    unsubscribeData();\n    resetHoveredEvent();\n    resetActiveEvent();\n    unsubscribeActiveEvent();\n    unsubscribeActiveEventMouseInside();\n    if (resetDataSubscribtion) {\n      resetDataSubscribtion();\n    }\n  };\n  return [$hoveredEvent, $activeEvent, reset];\n}\nfunction getHovered(rows, rowsTop, mouseTop, rowsHeight, rowsMap) {\n  let hovered2 = null;\n  for (let i = 0; i < rows.length; i++) {\n    const rowId = rows[i];\n    const rowTop = rowsTop[rowId];\n    if (mouseTop > rowTop) {\n      const rowHeight = rowsHeight[rowId];\n      if (mouseTop < rowTop + rowHeight) {\n        hovered2 = [rowId];\n        break;\n      }\n      const { children } = rowsMap[rowId];\n      if (children) {\n        const childIds = children.map(({ id }) => id);\n        const childHovered = getHovered(childIds, rowsTop, mouseTop, rowsHeight, rowsMap);\n        if (childHovered) {\n          hovered2 = [rowId, ...childHovered];\n        }\n      }\n    }\n  }\n  return hovered2;\n}\nfunction hoveredRowChanged(prev, next) {\n  if (prev === null && next === null) {\n    return false;\n  }\n  if (prev === null || next === null) {\n    return true;\n  }\n  if (prev.length !== next.length) {\n    return true;\n  }\n  for (let i = 0; i < prev.length; i++) {\n    if (prev[i] !== next[i]) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction initHoveredRow(viewState, $rowsStore) {\n  const { $timelineSize, $containerScrollTop, $timeState, $mouseCoords, $mouseInside } = viewState;\n  const [$hoveredRow, resetHoveredRow] = createAtom(null);\n  let resetRowsStoreSubscribtion = null;\n  const setHoveredRow = (next) => {\n    const curr = $hoveredRow.get();\n    if (hoveredRowChanged(curr, next)) {\n      $hoveredRow.set(next);\n    }\n  };\n  const unsubscribeContainerScrollTop = $containerScrollTop.listen(() => setHoveredRow(null));\n  const unsubscribeTimeState = $timeState.listen(() => setHoveredRow(null));\n  const unsubscribeMouseInside = $mouseInside.listen((value2) => {\n    if (!value2) {\n      setHoveredRow(null);\n    }\n  });\n  const unsubscribe = $rowsStore.subscribe((rowsStore) => {\n    if (resetRowsStoreSubscribtion) {\n      resetRowsStoreSubscribtion();\n    }\n    const { $visibleRows, $rowsTop, $rowsHeight, $rowsMap } = rowsStore;\n    const unsubscribeMouseCoords = $mouseCoords.listen((coords) => {\n      const { headerHeight } = $timelineSize.get();\n      const visibleRows = $visibleRows.get();\n      const rowsTop = $rowsTop.get();\n      const rowsHeight = $rowsHeight.get();\n      const rowsMap = $rowsMap.get();\n      const containerScrollTop = $containerScrollTop.get();\n      const mouseTop = coords.top - headerHeight + containerScrollTop;\n      const hovered2 = getHovered(visibleRows, rowsTop, mouseTop, rowsHeight, rowsMap);\n      setHoveredRow(hovered2);\n    });\n    resetRowsStoreSubscribtion = () => {\n      unsubscribeMouseCoords();\n    };\n  });\n  const reset = () => {\n    unsubscribe();\n    unsubscribeContainerScrollTop();\n    unsubscribeTimeState();\n    unsubscribeMouseInside();\n    resetHoveredRow();\n    if (resetRowsStoreSubscribtion) {\n      resetRowsStoreSubscribtion();\n    }\n  };\n  return [$hoveredRow, reset];\n}\nfunction initRenderedEvents() {\n  const $renderedEvents = atom([]);\n  const reset = () => {\n    $renderedEvents.off();\n  };\n  return [$renderedEvents, reset];\n}\nfunction updateRowTop(rowId, rowsTop, rowsHeight, rowsMap, currentTop, settings) {\n  rowsTop[rowId] = currentTop;\n  const { children } = rowsMap[rowId];\n  const rowHeight = rowsHeight[rowId];\n  let nextTop = currentTop + rowHeight;\n  if (children) {\n    for (let i = 0; i < children.length; i++) {\n      const childRow = children[i];\n      nextTop = updateRowTop(childRow.id, rowsTop, rowsHeight, rowsMap, nextTop);\n    }\n  }\n  return nextTop;\n}\nfunction initHeightController(containerNode, $timelineSize, $rowsIds, $rowsHeight, $rowsTop, $containerHeight, $rowsLoading, $settings, $rowsMap) {\n  const [$containerRowsHeight, resetContainerRowsHeight] = createAtom(0);\n  const rowsAnimationController = /* @__PURE__ */ new Map();\n  let updateRowsHeightPlanned = false;\n  let stopped = false;\n  const updateRowsTop = () => {\n    const { headerHeight } = $timelineSize.get();\n    const ids = $rowsIds.get();\n    const rowsHeight = $rowsHeight.get();\n    const rowsTop = $rowsTop.get();\n    const settings = $settings.get();\n    const rowsMap = $rowsMap.get();\n    const newRowsTop = { ...rowsTop };\n    let top = settings.dataViewPadding;\n    for (let i = 0; i < ids.length; i++) {\n      const id = ids[i];\n      top = updateRowTop(id, newRowsTop, rowsHeight, rowsMap, top);\n    }\n    $rowsTop.set(newRowsTop);\n    $containerRowsHeight.set(top + headerHeight + settings.dataViewPadding);\n  };\n  const requestUpdateRowsTop = () => {\n    if (updateRowsHeightPlanned) {\n      return;\n    }\n    updateRowsHeightPlanned = true;\n    requestAnimationFrame(() => {\n      if (stopped) {\n        return;\n      }\n      updateRowsTop();\n      updateRowsHeightPlanned = false;\n    });\n  };\n  const updateContainerHeight = () => {\n    let height = $containerRowsHeight.get();\n    const rowsLoading = $rowsLoading.get();\n    if (rowsLoading) {\n      height += SIDEBAR_LOADING_HEIGHT;\n    }\n    containerNode.style.height = `${height}px`;\n    $containerHeight.set(height);\n  };\n  const unsubscribeIds = $rowsIds.listen(updateRowsTop);\n  const unsubscribeSettings = $settings.listen(updateRowsTop);\n  const unsubscribeSize = $timelineSize.listen(requestUpdateRowsTop);\n  const unsubscribeLoading = $rowsLoading.listen(updateContainerHeight);\n  const unsubscribeContainer = $containerRowsHeight.listen(updateContainerHeight);\n  const setRowHeight = (rowId, height) => {\n    let animationController = rowsAnimationController.get(rowId);\n    if (!animationController) {\n      const rowHeight = $rowsHeight.get()[rowId];\n      animationController = initAnimationController(rowHeight, (value2) => {\n        $rowsHeight.setKey(rowId, Math.round(value2));\n        requestUpdateRowsTop();\n      });\n      rowsAnimationController.set(rowId, animationController);\n    }\n    const settings = $settings.get();\n    animationController.move(height, settings.eventLineHeight * 10);\n  };\n  const reset = () => {\n    unsubscribeIds();\n    unsubscribeSettings();\n    unsubscribeSize();\n    unsubscribeLoading();\n    unsubscribeContainer();\n    resetContainerRowsHeight();\n    Array.from(rowsAnimationController).forEach(([rowId, animationController]) => {\n      rowsAnimationController.delete(rowId);\n      animationController.reset();\n    });\n    stopped = true;\n  };\n  return [setRowHeight, reset];\n}\nconst COUNT_PER_PAGE = 10;\nconst LOAD_TRESHOLD = 100;\nfunction addRow(rowItem, rowsHeight, rowsMap, rowsCrossEventsStrategy, rowsNestedLevel, rowsExpanded, settings, nestedLevel = 0) {\n  const { rowPadding, eventLineHeight, crossEventsStrategy: crossEventsStrategy2 } = settings;\n  const { children } = rowItem;\n  rowsMap[rowItem.id] = rowItem;\n  rowsCrossEventsStrategy[rowItem.id] = crossEventsStrategy2;\n  rowsNestedLevel[rowItem.id] = nestedLevel;\n  rowsExpanded[rowItem.id] = rowItem.defaultExpanded || false;\n  let height = eventLineHeight + 2 * rowPadding;\n  if (children && children.length > 0) {\n    height += rowPadding;\n    for (let i = 0; i < children.length; i++) {\n      const childRowItem = children[i];\n      height += addRow(\n        childRowItem,\n        rowsHeight,\n        rowsMap,\n        rowsCrossEventsStrategy,\n        rowsNestedLevel,\n        rowsExpanded,\n        settings,\n        nestedLevel + 1\n      );\n    }\n  }\n  rowsHeight[rowItem.id] = height;\n  return height;\n}\nfunction pushNewRows(page, $rowsCrossEventsStrategy, $settings, $rowsIds, $rowsHeight, $rowsMap, $rowsNestedLevel, $rowsExpanded) {\n  const settings = $settings.get();\n  const currIds = $rowsIds.get();\n  const currRowsHeight = $rowsHeight.get();\n  const currCrossEventsStrategy = $rowsCrossEventsStrategy.get();\n  const currRowsMap = $rowsMap.get();\n  const currRowsNestedLevel = $rowsNestedLevel.get();\n  const currRowsExpanded = $rowsExpanded.get();\n  const newIds = currIds.slice(0, page.offset);\n  const newRowsHeight = { ...currRowsHeight };\n  const newCrossEventsStrategy = { ...currCrossEventsStrategy };\n  const newRowsMap = { ...currRowsMap };\n  const newRowsNestedLevel = { ...currRowsNestedLevel };\n  const newRowsExpanded = { ...currRowsExpanded };\n  for (let i = 0; i < page.data.length; i++) {\n    const rowItem = page.data[i];\n    newIds.push(rowItem.id);\n    addRow(rowItem, newRowsHeight, newRowsMap, newCrossEventsStrategy, newRowsNestedLevel, newRowsExpanded, settings);\n  }\n  $rowsMap.set(newRowsMap);\n  $rowsHeight.set(newRowsHeight);\n  $rowsCrossEventsStrategy.set(newCrossEventsStrategy);\n  $rowsNestedLevel.set(newRowsNestedLevel);\n  $rowsExpanded.set(newRowsExpanded);\n  $rowsIds.set(newIds);\n}\nfunction initLoadController(scrollableNode, $timelineSize, $containerScrollTop, $rowsIds, $rowsMap, $rowsHeight, $rowsCrossEventsStrategy, $rowsLoading, $settings, $containerHeight, $rowsNestedLevel, $rowsExpanded, getRows) {\n  let stopped = false;\n  let totalCount = 1;\n  let loadedCount = 0;\n  let needLoadNext = false;\n  let loading2 = false;\n  const addRowsPage = (page) => {\n    totalCount = page.totalCount;\n    loadedCount = page.offset + page.count;\n    pushNewRows(\n      page,\n      $rowsCrossEventsStrategy,\n      $settings,\n      $rowsIds,\n      $rowsHeight,\n      $rowsMap,\n      $rowsNestedLevel,\n      $rowsExpanded\n    );\n  };\n  const load = async () => {\n    if (stopped || loadedCount === totalCount) {\n      needLoadNext = false;\n      $rowsLoading.set(false);\n      loading2 = false;\n      return;\n    }\n    if (loading2) {\n      needLoadNext = true;\n      return;\n    }\n    $rowsLoading.set(true);\n    loading2 = true;\n    const page = await getRows({\n      offset: loadedCount,\n      count: COUNT_PER_PAGE\n    });\n    if (stopped) {\n      return;\n    }\n    addRowsPage(page);\n    loading2 = false;\n    if (needLoadNext) {\n      needLoadNext = false;\n      load();\n    } else {\n      $rowsLoading.set(false);\n      requestLoad();\n    }\n  };\n  const loadIfNeed = () => {\n    if (stopped) {\n      return;\n    }\n    const bottomSpace = scrollableNode.scrollHeight - scrollableNode.offsetHeight - scrollableNode.scrollTop;\n    if (bottomSpace < LOAD_TRESHOLD) {\n      load();\n    }\n  };\n  let loadPlanned = false;\n  const requestLoad = () => {\n    if (loadPlanned) {\n      return;\n    }\n    loadPlanned = true;\n    requestAnimationFrame(() => {\n      loadIfNeed();\n      loadPlanned = false;\n    });\n  };\n  const unsubscribeContainer = $containerScrollTop.listen(requestLoad);\n  const unsubscribeTimelineSize = $timelineSize.listen(requestLoad);\n  const unsubscribeContainerHeight = $containerHeight.listen(requestLoad);\n  const reset = () => {\n    stopped = true;\n    unsubscribeContainer();\n    unsubscribeTimelineSize();\n    unsubscribeContainerHeight();\n  };\n  load();\n  return reset;\n}\nfunction initRowsCrossEventsStrategy($settings) {\n  const [$rowsCrossEventsStrategy, resetCrossEventsStrategy] = createMapStore();\n  let { crossEventsStrategy: crossEventsStrategy2 } = $settings.get();\n  $settings.listen((settings) => {\n    if (settings.crossEventsStrategy !== crossEventsStrategy2) {\n      crossEventsStrategy2 = settings.crossEventsStrategy;\n      const rowsCrossEventsStrategy = $rowsCrossEventsStrategy.get();\n      const newCrossEventsStrategy = {};\n      for (const key in rowsCrossEventsStrategy) {\n        newCrossEventsStrategy[key] = crossEventsStrategy2;\n      }\n      $rowsCrossEventsStrategy.set(newCrossEventsStrategy);\n    }\n  });\n  return [$rowsCrossEventsStrategy, resetCrossEventsStrategy];\n}\nfunction rowsChanged(currRows, newRows) {\n  if (currRows.length !== newRows.length) {\n    return true;\n  }\n  for (let i = 0; i < currRows.length; i++) {\n    if (currRows[i] !== newRows[i]) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction initVisibleRows($rowsIds, $timelineSize, $containerScrollTop, $rowsTop, $rowsHeight, $rowsMap) {\n  const [$visibleRows, resetVisibleRows] = createAtom([]);\n  const $data = computed(\n    [$rowsIds, $timelineSize, $containerScrollTop, $rowsTop, $rowsHeight, $rowsMap],\n    (rowsIds, timelineSize, containerScrollTop, rowsTop, rowsHeight, rowsMap) => ({\n      rowsIds,\n      timelineSize,\n      containerScrollTop,\n      rowsTop,\n      rowsHeight,\n      rowsMap\n    })\n  );\n  const unsubscribe = $data.subscribe(({ rowsIds, timelineSize, containerScrollTop, rowsTop, rowsHeight, rowsMap }) => {\n    const visibleRows = [];\n    const { dataHeight } = timelineSize;\n    const viewTop = containerScrollTop;\n    const viewBottom = viewTop + dataHeight;\n    for (let i = 0; i < rowsIds.length; i++) {\n      const id = rowsIds[i];\n      const rowTop = rowsTop[id];\n      const rowHeight = getRowHeightWithChildren(id, rowsHeight, rowsMap);\n      const rowBottom = rowTop + rowHeight;\n      if (rowTop > viewBottom) {\n        break;\n      }\n      if (rowBottom >= viewTop) {\n        visibleRows.push(id);\n      }\n    }\n    const currVisibleRows = $visibleRows.get();\n    if (rowsChanged(currVisibleRows, visibleRows)) {\n      $visibleRows.set(visibleRows);\n    }\n  });\n  const reset = () => {\n    unsubscribe();\n    $data.off();\n    resetVisibleRows();\n  };\n  return [$visibleRows, reset];\n}\nfunction createRows(containerNode, scrollableNode, $timelineSize, $containerScrollTop, $settings, getRows) {\n  const [$rowsIds, resetRowsIds] = createAtom([]);\n  const [$rowsMap, resetRowsMap] = createMapStore();\n  const [$rowsCrossEventsStrategy, resetRowsCrossEventsStrategy] = initRowsCrossEventsStrategy($settings);\n  const [$rowsLoading, resetRowsLoading] = createAtom(false);\n  const [$rowsHeight, resetRowsHeight] = createMapStore();\n  const [$rowsNestedLevel, resetRowsNestedLevel] = createMapStore();\n  const [$rowsExpanded, resetRowsExpanded] = createMapStore();\n  const [$rowsTop, resetRowsTop] = createMapStore();\n  const [$containerHeight, resetContainerHeight] = createAtom(0);\n  const [$visibleRows, resetVisibleRows] = initVisibleRows(\n    $rowsIds,\n    $timelineSize,\n    $containerScrollTop,\n    $rowsTop,\n    $rowsHeight,\n    $rowsMap\n  );\n  const resetLoadController = initLoadController(\n    scrollableNode,\n    $timelineSize,\n    $containerScrollTop,\n    $rowsIds,\n    $rowsMap,\n    $rowsHeight,\n    $rowsCrossEventsStrategy,\n    $rowsLoading,\n    $settings,\n    $containerHeight,\n    $rowsNestedLevel,\n    $rowsExpanded,\n    getRows\n  );\n  const [setRowHeight, resetHeightController] = initHeightController(\n    containerNode,\n    $timelineSize,\n    $rowsIds,\n    $rowsHeight,\n    $rowsTop,\n    $containerHeight,\n    $rowsLoading,\n    $settings,\n    $rowsMap\n  );\n  const reset = () => {\n    resetRowsIds();\n    resetRowsMap();\n    resetRowsLoading();\n    resetLoadController();\n    resetRowsHeight();\n    resetHeightController();\n    resetRowsTop();\n    resetContainerHeight();\n    resetVisibleRows();\n    resetRowsCrossEventsStrategy();\n    resetRowsNestedLevel();\n    resetRowsExpanded();\n  };\n  const rowsStore = {\n    $rowsIds,\n    $rowsMap,\n    $rowsCrossEventsStrategy,\n    $rowsHeight,\n    $rowsTop,\n    $rowsLoading,\n    $containerHeight,\n    $visibleRows,\n    $rowsNestedLevel,\n    $rowsExpanded,\n    setRowHeight\n  };\n  return [rowsStore, reset];\n}\nfunction initRows(containerNode, scrollableNode, viewState, $settings, getRows) {\n  let [rowsStore, resetRowsStore] = createRows(\n    containerNode,\n    scrollableNode,\n    viewState.$timelineSize,\n    viewState.$containerScrollTop,\n    $settings,\n    getRows\n  );\n  const $rowsStore = atom(rowsStore);\n  const reInitRows = (newGetRows) => {\n    resetRowsStore();\n    scrollableNode.scrollTop = 0;\n    [rowsStore, resetRowsStore] = createRows(\n      containerNode,\n      scrollableNode,\n      viewState.$timelineSize,\n      viewState.$containerScrollTop,\n      $settings,\n      newGetRows\n    );\n    $rowsStore.set(rowsStore);\n  };\n  const reset = () => {\n    resetRowsStore();\n  };\n  return [$rowsStore, reInitRows, reset];\n}\nfunction updateEventsLines(eventsDiff, prevLines) {\n  let lines = [];\n  const { addedEnd, addedStart, removedEnd, removedStart } = eventsDiff;\n  const removedEndIds = new Set(removedEnd.map(({ id }) => id));\n  const removedStartIds = new Set(removedStart.map(({ id }) => id));\n  for (let i = 0; i < prevLines.length; i++) {\n    const line = prevLines[i];\n    let startIndex = 0;\n    while (startIndex < line.length && removedStartIds.has(line[startIndex].id)) {\n      startIndex++;\n    }\n    let endIndex = line.length - 1;\n    while (endIndex >= 0 && removedEndIds.has(line[endIndex].id)) {\n      endIndex--;\n    }\n    lines.push(line.slice(startIndex, endIndex + 1));\n  }\n  lines = lines.filter((line) => line.length > 0);\n  const linesEnds = lines.map((line) => {\n    const lastEvent = line[line.length - 1];\n    return lastEvent.end;\n  });\n  for (let i = 0; i < addedEnd.length; i++) {\n    const event2 = addedEnd[i];\n    let pushed = false;\n    for (let j = 0; j < lines.length; j++) {\n      const line = lines[j];\n      if (linesEnds[j] <= event2.start) {\n        line.push(event2);\n        linesEnds[j] = event2.end;\n        pushed = true;\n        break;\n      }\n    }\n    if (!pushed) {\n      const newLine = [event2];\n      lines.push(newLine);\n      linesEnds.push(event2.end);\n    }\n  }\n  const addedStartSorted = addedStart.sort((event1, event2) => event2.end - event1.end);\n  const linesStarts = lines.map((line) => {\n    const firstEvent = line[0];\n    return firstEvent.start;\n  });\n  for (let i = 0; i < addedStartSorted.length; i++) {\n    const event2 = addedStartSorted[i];\n    let pushed = false;\n    for (let j = 0; j < lines.length; j++) {\n      const line = lines[j];\n      if (linesStarts[j] >= event2.end) {\n        line.unshift(event2);\n        linesStarts[j] = event2.start;\n        pushed = true;\n        break;\n      }\n    }\n    if (!pushed) {\n      const newLine = [event2];\n      lines.push(newLine);\n      linesStarts.push(event2.start);\n    }\n  }\n  return lines;\n}\nfunction splitEventsToLines(events) {\n  if (!events || events.length === 0) {\n    return [];\n  }\n  const [firstEvent] = events;\n  const lines = [[firstEvent]];\n  const linesEnds = [firstEvent.end];\n  for (let i = 1; i < events.length; i++) {\n    const event2 = events[i];\n    let pushed = false;\n    for (let j = 0; j < lines.length; j++) {\n      const line = lines[j];\n      if (linesEnds[j] <= event2.start) {\n        line.push(event2);\n        linesEnds[j] = event2.end;\n        pushed = true;\n        break;\n      }\n    }\n    if (!pushed) {\n      const newLine = [event2];\n      lines.push(newLine);\n      linesEnds.push(event2.end);\n    }\n  }\n  return lines;\n}\nfunction getEventsLines(events, crossEventsStrategy2, cache) {\n  if (crossEventsStrategy2 === \"overlay-crossed-events\") {\n    return [events];\n  }\n  if (!cache || cache.crossEventsStrategy !== crossEventsStrategy2) {\n    return splitEventsToLines(events);\n  }\n  const eventsDiff = getEventsDiff(cache.events, events);\n  if (!eventsDiff) {\n    return splitEventsToLines(events);\n  }\n  return updateEventsLines(eventsDiff, cache.lines);\n}\nfunction getEvents(rowsEventsCache, storage, rowId, parentIds, range, rowsExpanded, rowsMap, rowsCrossEventsStrategy) {\n  const [start, end] = range;\n  if (parentIds.some((id) => !rowsExpanded[id])) {\n    return [];\n  }\n  const rowsIds = getNestedCoolapsedRowsIds(rowId, rowsMap, rowsExpanded);\n  const movedStart = Math.round(start - (end - start) / 10);\n  const rowsEvents = rowsIds.map((id) => storage.getEvents(id, [movedStart, end]));\n  const events = joinSortedEvents(rowsEvents);\n  const crossEventsStrategy2 = rowsCrossEventsStrategy[rowId];\n  const cache = rowsEventsCache.get(rowId);\n  const lines = getEventsLines(events, crossEventsStrategy2, cache);\n  rowsEventsCache.set(rowId, { events, lines, crossEventsStrategy: crossEventsStrategy2 });\n  return lines;\n}\nfunction getRowsDiff(rows, rowsIds) {\n  const added = [];\n  const rowsSet = new Set(rows);\n  for (let i = 0; i < rowsIds.length; i++) {\n    const id = rowsIds[i];\n    if (rowsSet.has(id)) {\n      rowsSet.delete(id);\n    } else {\n      added.push(id);\n    }\n  }\n  const removed = Array.from(rowsSet);\n  return [added, removed];\n}\nfunction initRowsEvents(viewState, $rowsStore, $eventsStore) {\n  const { $viewRangeTime } = viewState;\n  const visibleRowsState = /* @__PURE__ */ new Set();\n  const activeRowsState = /* @__PURE__ */ new Map();\n  const rowsEventsCache = /* @__PURE__ */ new Map();\n  const [$rowsEvents, resetRowsEvents] = createAtom({});\n  const $dataProvider = computed([$rowsStore, $eventsStore], (rowsStore, eventsStore) => {\n    const { $visibleRows, $rowsMap, $rowsExpanded, $rowsCrossEventsStrategy } = rowsStore;\n    const { storage } = eventsStore;\n    return { $visibleRows, $rowsMap, $rowsExpanded, $rowsCrossEventsStrategy, storage };\n  });\n  let unsubscribeVisibleRows = null;\n  let unsubscribeViewRangeTime = null;\n  let unsubscribeRowsExpanded = null;\n  let unsubscribeCrossEventsStrategy = null;\n  let unsubscribeStorage = null;\n  const unsubscribe = $dataProvider.subscribe(\n    ({ $visibleRows, $rowsMap, $rowsExpanded, $rowsCrossEventsStrategy, storage }) => {\n      let hash = \"\";\n      if (unsubscribeVisibleRows) {\n        unsubscribeVisibleRows();\n      }\n      if (unsubscribeViewRangeTime) {\n        unsubscribeViewRangeTime();\n      }\n      if (unsubscribeRowsExpanded) {\n        unsubscribeRowsExpanded();\n      }\n      if (unsubscribeCrossEventsStrategy) {\n        unsubscribeCrossEventsStrategy();\n      }\n      if (unsubscribeStorage) {\n        unsubscribeStorage();\n      }\n      unsubscribeStorage = () => {\n        Array.from(activeRowsState).forEach(([rowId, row2]) => {\n          activeRowsState.delete(rowId);\n          row2.reset();\n        });\n        $rowsEvents.set({});\n        activeRowsState.clear();\n        visibleRowsState.clear();\n        rowsEventsCache.clear();\n      };\n      const updateRowsEvents = (rowsIds) => {\n        const range = $viewRangeTime.get();\n        const rowsExpanded = $rowsExpanded.get();\n        const rowsCrossEventsStrategy = $rowsCrossEventsStrategy.get();\n        const rowsMap = $rowsMap.get();\n        const currRowsEvents = $rowsEvents.get();\n        const rowsEvents = {};\n        activeRowsState.forEach((row2) => {\n          if (rowsIds && !rowsIds.includes(row2.rowId)) {\n            rowsEvents[row2.rowId] = currRowsEvents[row2.rowId];\n          } else {\n            rowsEvents[row2.rowId] = getEvents(\n              rowsEventsCache,\n              storage,\n              row2.rowId,\n              row2.parentsIds,\n              range,\n              rowsExpanded,\n              rowsMap,\n              rowsCrossEventsStrategy\n              // currRowsEvents[row.rowId] || null,\n            );\n          }\n        });\n        $rowsEvents.set(rowsEvents);\n      };\n      unsubscribeViewRangeTime = $viewRangeTime.subscribe(() => updateRowsEvents());\n      unsubscribeRowsExpanded = $rowsExpanded.subscribe(() => updateRowsEvents());\n      unsubscribeCrossEventsStrategy = $rowsCrossEventsStrategy.subscribe(() => updateRowsEvents());\n      const addRow2 = (rowId, rowsEvents, rowsMap, rowsExpanded, parentsIds = []) => {\n        const parentsStack = [...parentsIds, rowId];\n        const unsubscribe2 = storage.subscribe(rowId, () => {\n          updateRowsEvents(parentsStack);\n        });\n        const row2 = {\n          reset: unsubscribe2,\n          rowId,\n          parentsIds\n        };\n        activeRowsState.set(rowId, row2);\n        rowsEvents[rowId] = getEvents(\n          rowsEventsCache,\n          storage,\n          rowId,\n          parentsIds,\n          $viewRangeTime.get(),\n          rowsExpanded,\n          rowsMap,\n          $rowsCrossEventsStrategy.get()\n          // null,\n        );\n        const { children } = rowsMap[rowId];\n        if (children) {\n          for (let i = 0; i < children.length; i++) {\n            const childRow = children[i];\n            addRow2(childRow.id, rowsEvents, rowsMap, rowsExpanded, parentsStack);\n          }\n        }\n      };\n      const removeRow = (rowId, rowsEvents, rowsMap) => {\n        const row2 = activeRowsState.get(rowId);\n        rowsEventsCache.delete(rowId);\n        if (row2) {\n          row2.reset();\n          activeRowsState.delete(rowId);\n        }\n        delete rowsEvents[rowId];\n        const { children } = rowsMap[rowId];\n        if (children) {\n          for (let i = 0; i < children.length; i++) {\n            const childRow = children[i];\n            removeRow(childRow.id, rowsEvents, rowsMap);\n          }\n        }\n      };\n      unsubscribeVisibleRows = $visibleRows.subscribe((visibleRowsIds) => {\n        const rowsMap = $rowsMap.get();\n        const rowsExpanded = $rowsExpanded.get();\n        const newHash = visibleRowsIds.join(\"-\");\n        if (hash === newHash) {\n          return;\n        }\n        hash = newHash;\n        const [added, removed] = getRowsDiff(visibleRowsState, visibleRowsIds);\n        const newRowsEvents = { ...$rowsEvents.get() };\n        for (let i = 0; i < added.length; i++) {\n          const id = added[i];\n          visibleRowsState.add(id);\n          addRow2(id, newRowsEvents, rowsMap, rowsExpanded);\n        }\n        for (let i = 0; i < removed.length; i++) {\n          const id = removed[i];\n          visibleRowsState.delete(id);\n          removeRow(id, newRowsEvents, rowsMap);\n        }\n        $rowsEvents.set(newRowsEvents);\n      });\n    }\n  );\n  const reset = () => {\n    unsubscribe();\n    if (unsubscribeVisibleRows) {\n      unsubscribeVisibleRows();\n    }\n    if (unsubscribeViewRangeTime) {\n      unsubscribeViewRangeTime();\n    }\n    if (unsubscribeRowsExpanded) {\n      unsubscribeRowsExpanded();\n    }\n    if (unsubscribeCrossEventsStrategy) {\n      unsubscribeCrossEventsStrategy();\n    }\n    if (unsubscribeStorage) {\n      unsubscribeStorage();\n    }\n    resetRowsEvents();\n  };\n  return [$rowsEvents, reset];\n}\nfunction updateRowHeight(rowId, setRowHeight, rowsHeight, rowsCrossEventsStrategy, settings, rowsEvents, rowsMap, rowsExpanded, visible2 = true, isLastChild = false) {\n  const crossEventsStrategy2 = rowsCrossEventsStrategy[rowId];\n  let height = 0;\n  const { children } = rowsMap[rowId];\n  const expanded2 = rowsExpanded[rowId];\n  if (visible2) {\n    height += settings.eventLineHeight + 2 * settings.rowPadding;\n    if (crossEventsStrategy2 === \"split-crossed-events\") {\n      const eventsLines = rowsEvents[rowId];\n      if (eventsLines && eventsLines.length > 1) {\n        height += (eventsLines.length - 1) * (settings.eventLineHeight + settings.eventLineMargin);\n      }\n    }\n    if (isLastChild && (!children || !expanded2)) {\n      height += settings.rowPadding;\n    }\n  }\n  if (children && children.length > 0) {\n    for (let i = 0; i < children.length; i++) {\n      const childItem = children[i];\n      const isLast = i === children.length - 1;\n      updateRowHeight(\n        childItem.id,\n        setRowHeight,\n        rowsHeight,\n        rowsCrossEventsStrategy,\n        settings,\n        rowsEvents,\n        rowsMap,\n        rowsExpanded,\n        visible2 && expanded2,\n        isLast\n      );\n    }\n  }\n  if (rowsHeight[rowId] !== height) {\n    setRowHeight(rowId, height);\n  }\n  return height;\n}\nfunction initRowsHeightController($rowsStore, $rowsEvents, $settings) {\n  let resetRowsHeightController = null;\n  const unsubscribe = $rowsStore.subscribe((rowsStore) => {\n    if (resetRowsHeightController) {\n      resetRowsHeightController();\n    }\n    const { $visibleRows, $rowsHeight, $rowsCrossEventsStrategy, $rowsMap, $rowsExpanded, setRowHeight } = rowsStore;\n    const $data = computed(\n      [$visibleRows, $rowsCrossEventsStrategy, $rowsEvents, $rowsExpanded, $settings],\n      (visibleRows, rowsCrossEventsStrategy, rowsEvents, rowsExpanded, settings) => ({\n        visibleRows,\n        rowsCrossEventsStrategy,\n        rowsEvents,\n        rowsExpanded,\n        settings\n      })\n    );\n    const unsubscribeData = $data.subscribe(\n      ({ visibleRows, rowsCrossEventsStrategy, rowsEvents, rowsExpanded, settings }) => {\n        const rowsMap = $rowsMap.get();\n        const rowsHeight = $rowsHeight.get();\n        for (let i = 0; i < visibleRows.length; i++) {\n          const rowId = visibleRows[i];\n          updateRowHeight(\n            rowId,\n            setRowHeight,\n            rowsHeight,\n            rowsCrossEventsStrategy,\n            settings,\n            rowsEvents,\n            rowsMap,\n            rowsExpanded\n          );\n        }\n      }\n    );\n    resetRowsHeightController = () => {\n      unsubscribeData();\n      $data.off();\n    };\n  });\n  const reset = () => {\n    unsubscribe();\n    if (resetRowsHeightController) {\n      resetRowsHeightController();\n    }\n  };\n  return reset;\n}\nconst DEFAULT_SETTINGS = {\n  canChangeCrossEventsStrategy: false,\n  crossEventsStrategy: \"split-crossed-events\",\n  sidebarWidth: \"auto\",\n  activeEventPanelWidth: \"auto\",\n  showCurrentTime: true,\n  showMouseTime: true,\n  showHoveredEventPopup: true,\n  highlightHoveredEvent: true,\n  showTimezoneInfo: true,\n  showScaleController: true,\n  showSidebar: true,\n  headerHeight: DEFAULT_HEADER_HEIGHT,\n  dataViewPadding: DEFAULT_DATA_VIEW_PADDING,\n  rowPadding: DEFAULT_ROW_PADDING,\n  eventLineHeight: DEFAULT_EVENT_LINE_HEIGHT,\n  eventLineMargin: DEFAULT_EVENT_LINE_MARGIN,\n  renderGridLines: true,\n  eventBorderRadius: 0,\n  eventContentMinWidth: DEFAULT_EVENT_CONTENT_MIN_WIDTH,\n  highlightHoveredRow: false,\n  renderEventContent: null,\n  renderActiveEvent: null,\n  renderEventPopupContent: null,\n  renderSidebarRowContent: null\n};\nconst settingsKeys = Object.keys(DEFAULT_SETTINGS);\nfunction getValueCheckers() {\n  return {\n    canChangeCrossEventsStrategy: (value2) => typeof value2 === \"boolean\",\n    crossEventsStrategy: (value2) => value2 === \"overlay-crossed-events\" || value2 === \"split-crossed-events\",\n    showCurrentTime: (value2) => typeof value2 === \"boolean\",\n    showMouseTime: (value2) => typeof value2 === \"boolean\",\n    showHoveredEventPopup: (value2) => typeof value2 === \"boolean\",\n    highlightHoveredEvent: (value2) => typeof value2 === \"boolean\",\n    showTimezoneInfo: (value2) => typeof value2 === \"boolean\",\n    showScaleController: (value2) => typeof value2 === \"boolean\",\n    showSidebar: (value2) => typeof value2 === \"boolean\",\n    sidebarWidth: (value2) => typeof value2 === \"number\" || value2 === \"auto\",\n    activeEventPanelWidth: (value2) => typeof value2 === \"number\" || value2 === \"auto\",\n    headerHeight: (value2) => typeof value2 === \"number\",\n    dataViewPadding: (value2) => typeof value2 === \"number\",\n    rowPadding: (value2) => typeof value2 === \"number\",\n    eventLineHeight: (value2) => typeof value2 === \"number\",\n    eventLineMargin: (value2) => typeof value2 === \"number\",\n    eventBorderRadius: (value2) => typeof value2 === \"number\",\n    eventContentMinWidth: (value2) => typeof value2 === \"number\",\n    highlightHoveredRow: (value2) => typeof value2 === \"boolean\",\n    renderGridLines: (value2) => typeof value2 === \"boolean\",\n    renderEventContent: (value2) => typeof value2 === \"function\",\n    renderActiveEvent: (value2) => typeof value2 === \"function\",\n    renderEventPopupContent: (value2) => typeof value2 === \"function\",\n    renderSidebarRowContent: (value2) => typeof value2 === \"function\"\n  };\n}\nfunction getSettingsValue(valueCheckers, key, ...settings) {\n  const checkValue = valueCheckers[key];\n  for (let i = 0; i < settings.length; i++) {\n    const value2 = settings[i][key];\n    if (checkValue(value2)) {\n      return value2;\n    }\n  }\n  return DEFAULT_SETTINGS[key];\n}\nfunction mergeSettings(...settings) {\n  const valueCheckers = getValueCheckers();\n  return settingsKeys.reduce((acc, key) => {\n    acc[key] = getSettingsValue(valueCheckers, key, ...settings);\n    return acc;\n  }, {});\n}\nfunction initSettings(defaultSettings) {\n  const [$settings, resetSettings] = createAtom(mergeSettings(defaultSettings || {}));\n  const setSettings = (settings) => {\n    $settings.set(mergeSettings(settings));\n  };\n  return [$settings, setSettings, resetSettings];\n}\nfunction validateTimeZoneName(timeZoneName) {\n  if (!timeZoneName) {\n    return null;\n  }\n  if (SUPPORTED_TIME_ZONES.includes(timeZoneName)) {\n    return timeZoneName;\n  }\n  console.error(`Unsupported time zone ${timeZoneName}, local time zone will be used: ${CURRENT_TIME_ZONE}`);\n  return null;\n}\nfunction initViewTimeZone(viewState, defaultViewTimeZoneName) {\n  const { $viewRangeTime } = viewState;\n  let viewTimeZoneName = validateTimeZoneName(defaultViewTimeZoneName);\n  const getOffset = (range) => {\n    const [start, end] = range;\n    const middle = Math.round((start + end) / 2);\n    return getTimezoneOffset(middle, viewTimeZoneName);\n  };\n  const [$viewTimeZone, resetViewTimeZone] = createAtom({\n    name: viewTimeZoneName || CURRENT_TIME_ZONE,\n    offset: getOffset($viewRangeTime.get())\n  });\n  const unsubscribe = $viewRangeTime.subscribe((range) => {\n    const newOffset = getOffset(range);\n    const { offset } = $viewTimeZone.get();\n    if (offset !== newOffset) {\n      $viewTimeZone.set({\n        name: viewTimeZoneName || CURRENT_TIME_ZONE,\n        offset: newOffset\n      });\n    }\n  });\n  const setViewTimeZone = (newViewTimeZoneName) => {\n    viewTimeZoneName = validateTimeZoneName(newViewTimeZoneName);\n    $viewTimeZone.set({\n      name: viewTimeZoneName || CURRENT_TIME_ZONE,\n      offset: getOffset($viewRangeTime.get())\n    });\n  };\n  const reset = () => {\n    unsubscribe();\n    resetViewTimeZone();\n  };\n  return [$viewTimeZone, setViewTimeZone, reset];\n}\nfunction initBoundingRect(timelineNode, scrollableNode, $mouseInside) {\n  const [$boundingRect, resetBoundingRect] = createAtom(timelineNode.getBoundingClientRect());\n  const onResize = () => {\n    $boundingRect.set(timelineNode.getBoundingClientRect());\n  };\n  const onScroll = (event2) => {\n    if (event2.target !== scrollableNode) {\n      $boundingRect.set(timelineNode.getBoundingClientRect());\n    }\n  };\n  const unsubscribe = $mouseInside.subscribe((isMouseInside) => {\n    if (isMouseInside) {\n      onResize();\n      window.addEventListener(\"resize\", onResize);\n      window.addEventListener(\"scroll\", onScroll, true);\n    } else {\n      window.removeEventListener(\"resize\", onResize);\n      window.removeEventListener(\"scroll\", onScroll, true);\n    }\n  });\n  const reset = () => {\n    unsubscribe();\n    window.removeEventListener(\"resize\", onResize);\n    window.removeEventListener(\"scroll\", onScroll, true);\n    resetBoundingRect();\n  };\n  return [$boundingRect, reset];\n}\nfunction initContainerScrollTop(scrollableNode) {\n  const [$containerScrollTop, resetContainerScrollTop] = createAtom(scrollableNode.scrollTop);\n  const onScroll = () => {\n    const { scrollTop } = scrollableNode;\n    if ($containerScrollTop.get() === scrollTop) {\n      return;\n    }\n    $containerScrollTop.set(scrollTop);\n  };\n  window.addEventListener(\"scroll\", onScroll, true);\n  const reset = () => {\n    window.removeEventListener(\"scroll\", onScroll, true);\n    resetContainerScrollTop();\n  };\n  return [$containerScrollTop, reset];\n}\nfunction initDragHandler(scrollableNode, $timelineSize, $mouseCoords, $mouseInside, $timeState, $activeEventVisible, setTimeState) {\n  const [$dragging, resetDragging] = createAtom(false);\n  let draggingOffTimeout = null;\n  const dragMove = () => {\n    if (draggingOffTimeout) {\n      clearTimeout(draggingOffTimeout);\n      draggingOffTimeout = null;\n    }\n    if (!$dragging.get()) {\n      $dragging.set(true);\n    }\n  };\n  const dragStop = () => {\n    if (draggingOffTimeout) {\n      return;\n    }\n    draggingOffTimeout = setTimeout(() => {\n      $dragging.set(false);\n      draggingOffTimeout = null;\n    }, 50);\n  };\n  let lastLeft = null;\n  let lastTop = null;\n  const onMouseMove = (event2) => {\n    const left = event2.clientX;\n    const top = event2.clientY;\n    if (!lastLeft) {\n      lastLeft = left;\n    }\n    if (!lastTop) {\n      lastTop = top;\n    }\n    const leftDiff = left - lastLeft;\n    const topDiff = top - lastTop;\n    if (leftDiff === 0 && topDiff === 0) {\n      return;\n    }\n    dragMove();\n    event2.preventDefault();\n    const { start, scale } = $timeState.get();\n    const timeDiff = leftDiff * scale;\n    scrollableNode.scrollTop = scrollableNode.scrollTop - topDiff;\n    lastLeft = left;\n    lastTop = top;\n    setTimeState({\n      scale,\n      start: start - timeDiff\n    });\n  };\n  const onMouseUp = () => {\n    lastLeft = null;\n    lastTop = null;\n    dragStop();\n    document.removeEventListener(\"mouseup\", onMouseUp);\n    document.removeEventListener(\"mousemove\", onMouseMove);\n  };\n  const onMouseDown = (event2) => {\n    const activeEventVisible = $activeEventVisible.get();\n    const { headerHeight, sidebarWidth, width, activeEventPanelWidth } = $timelineSize.get();\n    const { left, top } = $mouseCoords.get();\n    if (left < sidebarWidth || top < headerHeight) {\n      return;\n    }\n    if (activeEventVisible && left > width - activeEventPanelWidth) {\n      return;\n    }\n    lastLeft = event2.clientX;\n    lastTop = event2.clientY;\n    document.addEventListener(\"mouseup\", onMouseUp);\n    document.addEventListener(\"mousemove\", onMouseMove);\n  };\n  $mouseInside.subscribe((isMouseInside) => {\n    if (isMouseInside) {\n      document.addEventListener(\"mousedown\", onMouseDown);\n    } else {\n      document.removeEventListener(\"mousedown\", onMouseDown);\n    }\n  });\n  const reset = () => {\n    document.removeEventListener(\"mousedown\", onMouseDown);\n    document.removeEventListener(\"mouseup\", onMouseUp);\n    document.removeEventListener(\"mousemove\", onMouseMove);\n    resetDragging();\n  };\n  return [$dragging, reset];\n}\nfunction initMouseCoords($mouseInside, $boundingRect) {\n  const [$mouseCoords, resetMouseCoords] = createAtom({ left: 0, top: 0 });\n  const onMouseMove = (event2) => {\n    const { left, top } = $boundingRect.get();\n    $mouseCoords.set({\n      left: event2.clientX - left,\n      top: event2.clientY - top\n    });\n  };\n  const unsubscribe = $mouseInside.subscribe((isMouseInside) => {\n    if (isMouseInside) {\n      window.addEventListener(\"mousemove\", onMouseMove);\n    } else {\n      window.removeEventListener(\"mousemove\", onMouseMove);\n    }\n  });\n  const reset = () => {\n    unsubscribe();\n    window.removeEventListener(\"mousemove\", onMouseMove);\n    resetMouseCoords();\n  };\n  return [$mouseCoords, reset];\n}\nfunction initMouseInside(timelineNode) {\n  const [$mouseInside, resetMouseInside] = createAtom(false);\n  const onMouseEnter = () => {\n    $mouseInside.set(true);\n  };\n  const onMouseLeave = () => {\n    $mouseInside.set(false);\n  };\n  timelineNode.addEventListener(\"mouseenter\", onMouseEnter);\n  timelineNode.addEventListener(\"mouseleave\", onMouseLeave);\n  const reset = () => {\n    timelineNode.removeEventListener(\"mouseenter\", onMouseEnter);\n    timelineNode.removeEventListener(\"mouseleave\", onMouseLeave);\n    resetMouseInside();\n  };\n  return [$mouseInside, reset];\n}\nfunction initMouseTime($mouseInside, $mouseCoords, $timelineSize, $timeState) {\n  const [$mouseTime, resetMouseTime] = createAtom(null);\n  $mouseCoords.listen(({ left, top }) => {\n    const { sidebarWidth, width, headerHeight, height } = $timelineSize.get();\n    if (left < sidebarWidth || left > width || top < headerHeight || top > height) {\n      $mouseTime.set(null);\n    } else {\n      const { scale, start } = $timeState.get();\n      const time2 = Math.round(start + left * scale);\n      $mouseTime.set(time2);\n    }\n  });\n  $mouseInside.listen((isMouseInside) => {\n    if (!isMouseInside) {\n      $mouseTime.set(null);\n    }\n  });\n  $timeState.listen(() => {\n    $mouseTime.set(null);\n  });\n  return [$mouseTime, resetMouseTime];\n}\nfunction initScaleAnimation($timeState, $timelineSize, setTimeState) {\n  const animationController = initAnimationController($timeState.get().scale, (newScale) => {\n    if (newScale > MAX_SCALE) {\n      newScale = MAX_SCALE;\n    } else if (newScale < MIN_SCALE) {\n      newScale = MIN_SCALE;\n    }\n    const timelineSize = $timelineSize.get();\n    const containerOffset = timelineSize.sidebarWidth + timelineSize.dataWidth / 2;\n    const currentTimeState = $timeState.get();\n    const { scale: currentScale, start: currentStart } = currentTimeState;\n    const newStart = Math.round(currentStart + containerOffset * currentScale - containerOffset * newScale);\n    if (newScale === currentScale && newStart === currentStart) {\n      return;\n    }\n    setTimeState({\n      scale: newScale,\n      start: newStart\n    });\n  });\n  const unsubscribeTimeState = $timeState.subscribe((timeState) => {\n    animationController.set(timeState.scale);\n  });\n  const animateScale = (factor) => {\n    const currentTimeState = $timeState.get();\n    const { scale: currentScale } = currentTimeState;\n    let newScale = currentScale * factor;\n    if (newScale > MAX_SCALE) {\n      newScale = MAX_SCALE;\n    } else if (newScale < MIN_SCALE) {\n      newScale = MIN_SCALE;\n    }\n    animationController.move(newScale, Math.abs(currentScale - newScale));\n  };\n  const reset = () => {\n    unsubscribeTimeState();\n    animationController.reset();\n  };\n  return [animateScale, reset];\n}\nconst SHIFT_TRESHOLD = 500;\nfunction initScrollHandler(scrollableNode, $timeState, setTimeState) {\n  const [$containerScrollLeft, resetContainerScrollLeft] = createAtom(scrollableNode.scrollLeft);\n  const shiftToCenter = () => {\n    const { offsetWidth, scrollWidth } = scrollableNode;\n    const newScrollLeft = Math.round(scrollWidth / 2 - offsetWidth / 2);\n    $containerScrollLeft.set(newScrollLeft);\n    scrollableNode.scrollLeft = newScrollLeft;\n  };\n  const onScroll = () => {\n    const { scrollLeft } = scrollableNode;\n    const currentScrollLeft = $containerScrollLeft.get();\n    if (currentScrollLeft === scrollLeft) {\n      return;\n    }\n    const { scale, start } = $timeState.get();\n    const diff = scrollLeft - currentScrollLeft;\n    const newStart = start + diff * scale;\n    setTimeState({\n      scale,\n      start: newStart\n    });\n    const { offsetWidth, scrollWidth } = scrollableNode;\n    const right = scrollWidth - scrollLeft - offsetWidth;\n    if (scrollLeft < SHIFT_TRESHOLD || right < SHIFT_TRESHOLD) {\n      shiftToCenter();\n      return;\n    } else {\n      $containerScrollLeft.set(scrollLeft);\n    }\n  };\n  window.addEventListener(\"scroll\", onScroll, true);\n  const reset = () => {\n    window.removeEventListener(\"scroll\", onScroll, true);\n    resetContainerScrollLeft();\n  };\n  return reset;\n}\nfunction getDefaultCenterTime(defaultViewRange) {\n  if (!defaultViewRange) {\n    return Date.now();\n  }\n  const [start, end] = defaultViewRange;\n  return Math.round((end + start) / 2);\n}\nfunction getDefaultScale(dataWidth, defaultViewRange) {\n  if (!defaultViewRange) {\n    return DEFAULT_SCALE;\n  }\n  const [start, end] = defaultViewRange;\n  const scale = (end - start) / dataWidth;\n  if (scale > MAX_SCALE) {\n    return MAX_SCALE;\n  } else if (scale < MIN_SCALE) {\n    return MIN_SCALE;\n  }\n  return scale;\n}\nfunction setState($timeState, newTimeState) {\n  const { scale, start } = $timeState.get();\n  const { scale: newScale, start: newStart } = newTimeState;\n  if (start !== newStart || scale !== newScale) {\n    $timeState.set({\n      start: newStart,\n      scale: newScale\n    });\n  }\n}\nfunction fitTimeStateToLimit($timelineSize, viewRangeLimit, timeState) {\n  const [startLimit, endLimit] = viewRangeLimit;\n  if (!startLimit && !endLimit) {\n    return timeState;\n  }\n  const { sidebarWidth, dataWidth, width } = $timelineSize.get();\n  const { start, scale } = timeState;\n  if (!endLimit && startLimit) {\n    const sidebarWidthTime = scale * sidebarWidth;\n    if (start < startLimit - sidebarWidthTime) {\n      return {\n        start: startLimit - sidebarWidthTime,\n        scale\n      };\n    }\n  }\n  if (!startLimit && endLimit) {\n    const widthTime = scale * width;\n    if (start > endLimit - widthTime) {\n      return {\n        start: endLimit - widthTime,\n        scale\n      };\n    }\n  }\n  if (startLimit && endLimit) {\n    const scaleLimit = (endLimit - startLimit) / dataWidth;\n    if (scaleLimit <= scale) {\n      return {\n        scale: scaleLimit,\n        start: startLimit - scaleLimit * sidebarWidth\n      };\n    }\n    const sidebarWidthTime = scale * sidebarWidth;\n    if (start < startLimit - sidebarWidthTime) {\n      return {\n        start: startLimit - sidebarWidthTime,\n        scale\n      };\n    }\n    const widthTime = scale * width;\n    if (start > endLimit - widthTime) {\n      return {\n        start: endLimit - widthTime,\n        scale\n      };\n    }\n  }\n  return timeState;\n}\nfunction initTimeState($timelineSize, $viewRangeLimit, defaultViewRange) {\n  const centerTime = getDefaultCenterTime(defaultViewRange);\n  const { dataWidth, sidebarWidth } = $timelineSize.get();\n  const scale = getDefaultScale(dataWidth, defaultViewRange);\n  const centerPosition = sidebarWidth + dataWidth / 2;\n  const start = Math.round(centerTime - scale * centerPosition);\n  const [$timeState, resetTimeState] = createAtom(\n    fitTimeStateToLimit($timelineSize, $viewRangeLimit.get(), {\n      scale,\n      start\n    })\n  );\n  const setTimeState = (timeState) => {\n    setState($timeState, fitTimeStateToLimit($timelineSize, $viewRangeLimit.get(), timeState));\n  };\n  const unsubscribeViewRangeLimit = $viewRangeLimit.listen(\n    (viewRangeLimit) => setState($timeState, fitTimeStateToLimit($timelineSize, viewRangeLimit, $timeState.get()))\n  );\n  const reset = () => {\n    unsubscribeViewRangeLimit();\n    resetTimeState();\n  };\n  return [$timeState, setTimeState, reset];\n}\nconst SIDEBAR_MIN_WIDTH = 280;\nconst EVENTS_MODAL_MIN_WIDTH = 320;\nfunction getSidebarWidth(width, settings) {\n  if (!settings.showSidebar) {\n    return 0;\n  }\n  if (settings.sidebarWidth === \"auto\") {\n    return Math.max(Math.round(width * 0.2), SIDEBAR_MIN_WIDTH);\n  }\n  return settings.sidebarWidth;\n}\nfunction getActiveEventPanelWidth(width, settings) {\n  if (settings.activeEventPanelWidth === \"auto\") {\n    return Math.max(Math.round(width * 0.3), EVENTS_MODAL_MIN_WIDTH);\n  }\n  return settings.activeEventPanelWidth;\n}\nfunction getTimelineSize(timelineNode, settings) {\n  const width = timelineNode.offsetWidth;\n  const height = timelineNode.offsetHeight;\n  const headerHeight = settings.headerHeight;\n  const sidebarWidth = getSidebarWidth(width, settings);\n  const sidebarHeight = height - headerHeight;\n  const dataWidth = width - sidebarWidth;\n  const dataHeight = sidebarHeight;\n  const activeEventPanelWidth = getActiveEventPanelWidth(width, settings);\n  return {\n    width,\n    height,\n    sidebarWidth,\n    sidebarHeight,\n    dataWidth,\n    dataHeight,\n    headerHeight,\n    activeEventPanelWidth\n  };\n}\nfunction updateTimelineSize($timelineSize, timelineNode, settings) {\n  const currentSize = $timelineSize.get();\n  const newSize = getTimelineSize(timelineNode, settings);\n  if (currentSize.width !== newSize.width || currentSize.height !== newSize.height || currentSize.sidebarWidth !== newSize.sidebarWidth || currentSize.headerHeight !== newSize.headerHeight) {\n    $timelineSize.set(newSize);\n  }\n}\nfunction initTimelineSize(timelineNode, scrollableNode, $settings) {\n  const [$timelineSize, resetTimelineSize] = createAtom(getTimelineSize(timelineNode, $settings.get()));\n  const onResize = () => {\n    updateTimelineSize($timelineSize, timelineNode, $settings.get());\n  };\n  const onScroll = (event2) => {\n    if (event2.target !== scrollableNode) {\n      updateTimelineSize($timelineSize, timelineNode, $settings.get());\n    }\n  };\n  const unsibscribeSettings = $settings.listen((settings) => updateTimelineSize($timelineSize, timelineNode, settings));\n  window.addEventListener(\"resize\", onResize);\n  window.addEventListener(\"scroll\", onScroll, true);\n  const reset = () => {\n    window.removeEventListener(\"resize\", onResize);\n    window.removeEventListener(\"scroll\", onScroll, true);\n    resetTimelineSize();\n    unsibscribeSettings();\n  };\n  return [$timelineSize, reset];\n}\nconst DEFAULT_VIEW_RANGE_LIMIT = [null, null];\nfunction initViewRangeLimit(viewRangeLimit) {\n  const [$viewRangeLimit, resetViewRangeLimit] = createAtom(viewRangeLimit || DEFAULT_VIEW_RANGE_LIMIT);\n  const setViewRangeLimit = (newViewRangeLimit) => $viewRangeLimit.set(newViewRangeLimit || DEFAULT_VIEW_RANGE_LIMIT);\n  return [$viewRangeLimit, setViewRangeLimit, resetViewRangeLimit];\n}\nfunction initViewRangeTime($timeState, $timelineSize, onChangeViewRange) {\n  const $viewRangeTime = computed(\n    [$timeState, $timelineSize],\n    (timeState, timelineSize) => {\n      const leftPx = timelineSize.sidebarWidth;\n      const rightPx = leftPx + timelineSize.dataWidth;\n      const leftTime = Math.round(timeState.start + leftPx * timeState.scale);\n      const rightTime = Math.round(timeState.start + rightPx * timeState.scale);\n      return [leftTime, rightTime];\n    }\n  );\n  const [$viewRangeTimeDebounced, resetDebounce] = debouncedStore($viewRangeTime, 500);\n  $viewRangeTimeDebounced.listen((range) => onChangeViewRange(range));\n  const reset = () => {\n    resetDebounce();\n    $viewRangeTime.off();\n  };\n  return [$viewRangeTime, reset];\n}\nconst MAX_DELTA = 40;\nfunction initZoomHandler($mouseCoords, $timeState, $mouseInside, setTimeState) {\n  let unsubscribe = null;\n  const subscribe = () => onWheel($mouseCoords, (containerOffset, delta) => {\n    if (delta > MAX_DELTA) {\n      delta = MAX_DELTA;\n    } else if (delta < -MAX_DELTA) {\n      delta = -MAX_DELTA;\n    }\n    const currentTimeState = $timeState.get();\n    const { scale: currentScale, start: currentStart } = currentTimeState;\n    const newTimeState = updateTimeState(currentTimeState, delta, containerOffset);\n    const { scale: newScale, start: newStart } = newTimeState;\n    if (newScale === currentScale && newStart === currentStart) {\n      return;\n    }\n    setTimeState(newTimeState);\n  });\n  const unsubscribeMouseInside = $mouseInside.subscribe((isMouseInside) => {\n    if (isMouseInside) {\n      if (!unsubscribe) {\n        unsubscribe = subscribe();\n      }\n    } else {\n      if (unsubscribe) {\n        unsubscribe();\n        unsubscribe = null;\n      }\n    }\n  });\n  const reset = () => {\n    unsubscribeMouseInside();\n    if (unsubscribe) {\n      unsubscribe();\n    }\n  };\n  return reset;\n}\nfunction initViewState(timelineNode, scrollableNode, defaultViewRange, $settings, viewRangeLimit, onChangeViewRange) {\n  const [$activeEventVisible, resetActiveEventVisible] = createAtom(false);\n  const [$timelineSize, resetTimelineSize] = initTimelineSize(timelineNode, scrollableNode, $settings);\n  const [$mouseInside, resetMouseInside] = initMouseInside(timelineNode);\n  const [$boundingRect, resetBoundingRect] = initBoundingRect(timelineNode, scrollableNode, $mouseInside);\n  const [$mouseCoords, resetMouseCoords] = initMouseCoords($mouseInside, $boundingRect);\n  const [$viewRangeLimit, setViewRangeLimit, resetViewRangeLimit] = initViewRangeLimit(viewRangeLimit);\n  const [$timeState, setTimeState, resetTimeState] = initTimeState($timelineSize, $viewRangeLimit, defaultViewRange);\n  const [animateScale, resetScaleAnimation] = initScaleAnimation($timeState, $timelineSize, setTimeState);\n  const [$containerScrollTop, resetContainerScrollTop] = initContainerScrollTop(scrollableNode);\n  const [$mouseTime, resetMouseTime] = initMouseTime($mouseInside, $mouseCoords, $timelineSize, $timeState);\n  const [$viewRangeTime, resetViewRangeTime] = initViewRangeTime($timeState, $timelineSize, onChangeViewRange);\n  const [$dragging, resetDragHandler] = initDragHandler(\n    scrollableNode,\n    $timelineSize,\n    $mouseCoords,\n    $mouseInside,\n    $timeState,\n    $activeEventVisible,\n    setTimeState\n  );\n  const resetScrollHandler = initScrollHandler(scrollableNode, $timeState, setTimeState);\n  const resetZoomHandler = initZoomHandler($mouseCoords, $timeState, $mouseInside, setTimeState);\n  const viewState = {\n    $timelineSize,\n    $mouseInside,\n    $boundingRect,\n    $mouseCoords,\n    $timeState,\n    $containerScrollTop,\n    $mouseTime,\n    $viewRangeTime,\n    $dragging,\n    $activeEventVisible,\n    setViewRangeLimit,\n    animateScale\n  };\n  const reset = () => {\n    resetZoomHandler();\n    resetTimelineSize();\n    resetMouseInside();\n    resetBoundingRect();\n    resetMouseCoords();\n    resetTimeState();\n    resetScrollHandler();\n    resetContainerScrollTop();\n    resetMouseTime();\n    resetViewRangeTime();\n    resetScaleAnimation();\n    resetViewRangeLimit();\n    resetDragHandler();\n    resetActiveEventVisible();\n  };\n  return [viewState, reset];\n}\nfunction initStore(timelineNode, scrollableNode, containerNode, canvasNode, getRows, getEvents2, viewTimeZoneName, defaultViewRange, onChangeViewRange, defaultSettings, eventsLoadStepSize, viewRangeLimit) {\n  const [$settings, setSettings, resetSettings] = initSettings(defaultSettings);\n  const [$colors, setColorScheme, resetColors] = initColors(timelineNode);\n  const [$currentTime, resetCurrentTime] = initCurrentTime();\n  const [viewState, resetViewState] = initViewState(\n    timelineNode,\n    scrollableNode,\n    defaultViewRange,\n    $settings,\n    viewRangeLimit,\n    onChangeViewRange\n  );\n  const [$renderedEvents, resetRenderedEvents] = initRenderedEvents();\n  const [$viewTimeZone, setViewTimeZone, resetViewTimeZone] = initViewTimeZone(viewState, viewTimeZoneName);\n  const [gridState, resetGridState] = initGridState(viewState, $viewTimeZone);\n  const [$rowsStore, reInitRows, resetRowsStore] = initRows(\n    containerNode,\n    scrollableNode,\n    viewState,\n    $settings,\n    getRows\n  );\n  const [$eventsStore, reInitEvents, resetEventsStore] = initEvents(\n    $rowsStore,\n    viewState,\n    getEvents2,\n    eventsLoadStepSize\n  );\n  const [$rowsEvents, resetRowsEvents] = initRowsEvents(viewState, $rowsStore, $eventsStore);\n  const [$hoveredRow, resetHoveredRow] = initHoveredRow(viewState, $rowsStore);\n  const [$hoveredEvent, $activeEvent, resetHoveredEvent] = initHoveredEvent(\n    viewState,\n    $rowsStore,\n    $hoveredRow,\n    $rowsEvents,\n    $settings\n  );\n  const resetRowsHeightController = initRowsHeightController($rowsStore, $rowsEvents, $settings);\n  const resetCanvas = initCanvas(\n    canvasNode,\n    viewState,\n    gridState,\n    $rowsStore,\n    $rowsEvents,\n    $hoveredRow,\n    $hoveredEvent,\n    $colors,\n    $settings,\n    $renderedEvents,\n    $activeEvent\n  );\n  const reset = () => {\n    resetCurrentTime();\n    resetCanvas();\n    resetRowsStore();\n    resetEventsStore();\n    resetRowsEvents();\n    resetRowsHeightController();\n    resetHoveredRow();\n    resetHoveredEvent();\n    resetColors();\n    resetViewState();\n    resetGridState();\n    resetViewTimeZone();\n    resetSettings();\n    resetRenderedEvents();\n  };\n  const timelineStore = {\n    viewState,\n    gridState,\n    $rowsStore,\n    $eventsStore,\n    $currentTime,\n    $colors,\n    $rowsEvents,\n    $hoveredRow,\n    $hoveredEvent,\n    $activeEvent,\n    $viewTimeZone,\n    $settings,\n    $renderedEvents,\n    reInitRows,\n    reInitEvents,\n    reset,\n    setColorScheme,\n    setViewTimeZone,\n    setSettings\n  };\n  return timelineStore;\n}\nconst timeline = \"_timeline_ch0cm_1\";\nconst themedark = \"_themedark_ch0cm_32\";\nconst dragging = \"_dragging_ch0cm_56\";\nconst container = \"_container_ch0cm_60\";\nconst scrollArea = \"_scrollArea_ch0cm_66\";\nconst canvas = \"_canvas_ch0cm_75\";\nconst styles = {\n  timeline,\n  themedark,\n  dragging,\n  container,\n  scrollArea,\n  canvas\n};\nfunction Timeline({\n  className,\n  getRows,\n  getEvents: getEvents2,\n  colorScheme,\n  viewTimeZone,\n  defaultViewRange,\n  onChangeViewRange,\n  canChangeCrossEventsStrategy,\n  crossEventsStrategy: crossEventsStrategy2,\n  sidebarWidth,\n  activeEventPanelWidth,\n  showCurrentTime,\n  showMouseTime,\n  showHoveredEventPopup,\n  highlightHoveredEvent,\n  showTimezoneInfo,\n  showScaleController,\n  showSidebar,\n  headerHeight,\n  dataViewPadding,\n  rowPadding,\n  eventLineHeight,\n  eventLineMargin,\n  eventBorderRadius,\n  eventContentMinWidth,\n  highlightHoveredRow,\n  renderGridLines,\n  eventsLoadStepSize,\n  viewRangeLimit,\n  renderEventContent,\n  renderActiveEvent: renderActiveEvent2,\n  renderEventPopupContent,\n  renderSidebarRowContent\n}) {\n  const timelineRef = useRef(null);\n  const scrollableRef = useRef(null);\n  const containerRef = useRef(null);\n  const canvasRef = useRef(null);\n  const [timelineStore, setTimelineStore] = useState(null);\n  const persistentOnChangeViewRange = usePersistentCallback(onChangeViewRange);\n  useEffect(() => {\n    const timelineNode = timelineRef.current;\n    const containerNode = containerRef.current;\n    const scrollableNode = scrollableRef.current;\n    if (timelineNode && containerNode && scrollableNode) {\n      scrollableNode.scrollLeft = Math.round(containerNode.offsetWidth / 2 - timelineNode.offsetWidth / 2);\n    }\n  }, []);\n  useEffect(() => {\n    if (timelineStore) {\n      timelineStore.reInitRows(getRows);\n    }\n  }, [getRows]);\n  useEffect(() => {\n    if (timelineStore) {\n      timelineStore.reInitEvents(getEvents2, eventsLoadStepSize || DEFAULT_EVENTS_LOAD_STEP_SIZE);\n    }\n  }, [getEvents2, eventsLoadStepSize]);\n  useEffect(() => {\n    if (timelineStore) {\n      timelineStore.setColorScheme(colorScheme || null);\n    }\n  }, [colorScheme]);\n  useEffect(() => {\n    if (timelineStore) {\n      timelineStore.setViewTimeZone(viewTimeZone || null);\n    }\n  }, [viewTimeZone]);\n  useEffect(() => {\n    if (timelineStore) {\n      timelineStore.viewState.setViewRangeLimit(viewRangeLimit || null);\n    }\n  }, [viewRangeLimit]);\n  const timelineSettings = useMemo(\n    () => ({\n      canChangeCrossEventsStrategy,\n      crossEventsStrategy: crossEventsStrategy2,\n      sidebarWidth,\n      activeEventPanelWidth,\n      showCurrentTime,\n      showMouseTime,\n      showHoveredEventPopup,\n      highlightHoveredEvent,\n      showTimezoneInfo,\n      showScaleController,\n      showSidebar,\n      headerHeight,\n      dataViewPadding,\n      rowPadding,\n      eventLineHeight,\n      eventLineMargin,\n      eventBorderRadius,\n      eventContentMinWidth,\n      highlightHoveredRow,\n      renderGridLines,\n      renderEventContent,\n      renderActiveEvent: renderActiveEvent2,\n      renderEventPopupContent,\n      renderSidebarRowContent\n    }),\n    [\n      canChangeCrossEventsStrategy,\n      crossEventsStrategy2,\n      sidebarWidth,\n      activeEventPanelWidth,\n      showCurrentTime,\n      showMouseTime,\n      showHoveredEventPopup,\n      highlightHoveredEvent,\n      showTimezoneInfo,\n      showScaleController,\n      showSidebar,\n      headerHeight,\n      dataViewPadding,\n      rowPadding,\n      eventLineHeight,\n      eventLineMargin,\n      eventBorderRadius,\n      eventContentMinWidth,\n      highlightHoveredRow,\n      renderGridLines,\n      renderEventContent,\n      renderActiveEvent2,\n      renderEventPopupContent,\n      renderSidebarRowContent\n    ]\n  );\n  useEffect(() => {\n    if (timelineStore) {\n      timelineStore.setSettings(timelineSettings);\n    }\n  }, [timelineSettings]);\n  useEffect(() => {\n    const timelineNode = timelineRef.current;\n    const containerNode = containerRef.current;\n    const scrollableNode = scrollableRef.current;\n    const canvasNode = canvasRef.current;\n    if (timelineNode && containerNode && scrollableNode && canvasNode) {\n      const store = initStore(\n        timelineNode,\n        scrollableNode,\n        containerNode,\n        canvasNode,\n        getRows,\n        getEvents2,\n        viewTimeZone || null,\n        defaultViewRange || null,\n        persistentOnChangeViewRange,\n        timelineSettings,\n        eventsLoadStepSize || DEFAULT_EVENTS_LOAD_STEP_SIZE,\n        viewRangeLimit || null\n      );\n      setTimelineStore(store);\n      return () => {\n        store.reset();\n      };\n    }\n  }, []);\n  useEffect(() => {\n    if (timelineStore) {\n      const { $dragging } = timelineStore.viewState;\n      return $dragging.subscribe((dragging2) => {\n        if (!timelineRef.current) {\n          return;\n        }\n        if (dragging2) {\n          timelineRef.current.classList.add(styles.dragging);\n        } else {\n          timelineRef.current.classList.remove(styles.dragging);\n        }\n      });\n    }\n  }, [timelineStore]);\n  return /* @__PURE__ */ jsxs(\"div\", { className: clsx(className, styles.timeline, styles[`theme${colorScheme}`]), ref: timelineRef, children: [\n    /* @__PURE__ */ jsx(\"canvas\", { className: styles.canvas, ref: canvasRef }),\n    timelineStore && /* @__PURE__ */ jsx(EnhancedRenderedEvents, { timelineStore }),\n    /* @__PURE__ */ jsx(\"div\", { className: styles.scrollArea, ref: scrollableRef, children: /* @__PURE__ */ jsx(\"div\", { className: styles.container, ref: containerRef, children: timelineStore && /* @__PURE__ */ jsxs(Fragment, { children: [\n      /* @__PURE__ */ jsx(EnhancedHeader, { timelineStore }),\n      /* @__PURE__ */ jsx(EnhancedSidebar, { timelineStore })\n    ] }) }) }),\n    timelineStore && /* @__PURE__ */ jsxs(Fragment, { children: [\n      /* @__PURE__ */ jsx(EnhancedCurrentTime, { timelineStore }),\n      /* @__PURE__ */ jsx(EnhancedMouseTime, { timelineStore }),\n      /* @__PURE__ */ jsx(EnhancedHoveredEvent, { timelineStore }),\n      /* @__PURE__ */ jsx(EnhancedActiveEvent, { timelineStore })\n    ] })\n  ] });\n}\nexport {\n  Timeline\n};\n", "import { startTask } from '../task/index.js'\n\nexport let lastAction = Symbol()\nexport let actionId = Symbol()\n\nlet uid = 0\n\nexport let doAction = ($store, actionName, cb, args) => {\n  let id = ++uid\n  let tracker = { ...$store }\n  tracker.set = (...setArgs) => {\n    $store[lastAction] = actionName\n    $store[actionId] = id\n    $store.set(...setArgs)\n    delete $store[lastAction]\n    delete $store[actionId]\n  }\n  if ($store.setKey) {\n    tracker.setKey = (...setArgs) => {\n      $store[lastAction] = actionName\n      $store[actionId] = id\n      $store.setKey(...setArgs)\n      delete $store[lastAction]\n      delete $store[actionId]\n    }\n  }\n  let onError, onEnd\n  if ($store.action) {\n    ;[onError, onEnd] = $store.action(id, actionName, args)\n  }\n  let result = cb(tracker, ...args)\n  if (result instanceof Promise) {\n    let endTask = startTask()\n    return result\n      .catch(error => {\n        if (onError) onError(error)\n        throw error\n      })\n      .finally(() => {\n        endTask()\n        if (onEnd) onEnd()\n      })\n  }\n  if (onEnd) onEnd()\n  return result\n}\n\nexport let action =\n  ($store, actionName, cb) =>\n  (...args) =>\n    doAction($store, actionName, cb, args)\n", "import { cleanTasks } from '../task/index.js'\n\nexport let clean = Symbol('clean')\n\nexport let cleanStores = (...stores) => {\n  if (process.env.NODE_ENV === 'production') {\n    throw new Error(\n      'cleanStores() can be used only during development or tests'\n    )\n  }\n  cleanTasks()\n  for (let $store of stores) {\n    if ($store) {\n      if ($store.mocked) delete $store.mocked\n      if ($store[clean]) $store[clean]()\n    }\n  }\n}\n", "import { clean } from '../clean-stores/index.js'\n\nlet listenerQueue = []\n\nexport let atom = (initialValue, level) => {\n  let listeners = []\n  let $atom = {\n    get() {\n      if (!$atom.lc) {\n        $atom.listen(() => {})()\n      }\n      return $atom.value\n    },\n    l: level || 0,\n    lc: 0,\n    listen(listener, listenerLevel) {\n      $atom.lc = listeners.push(listener, listenerLevel || $atom.l) / 2\n\n      return () => {\n        let index = listeners.indexOf(listener)\n        if (~index) {\n          listeners.splice(index, 2)\n          if (!--$atom.lc) $atom.off()\n        }\n      }\n    },\n    notify(changedKey) {\n      let runListenerQueue = !listenerQueue.length\n      for (let i = 0; i < listeners.length; i += 2) {\n        listenerQueue.push(\n          listeners[i],\n          listeners[i + 1],\n          $atom.value,\n          changedKey,\n        )\n      }\n\n      if (runListenerQueue) {\n        for (let i = 0; i < listenerQueue.length; i += 4) {\n          let skip\n          for (let j = i + 1; !skip && (j += 4) < listenerQueue.length;) {\n            if (listenerQueue[j] < listenerQueue[i + 1]) {\n              skip = listenerQueue.push(\n               listenerQueue[i],\n               listenerQueue[i + 1],\n               listenerQueue[i + 2],\n               listenerQueue[i + 3]\n             )\n            }\n          }\n\n          if (!skip) {\n            listenerQueue[i](listenerQueue[i + 2], listenerQueue[i + 3])\n          }\n        }\n        listenerQueue.length = 0\n      }\n    },\n    off() {}, /* It will be called on last listener unsubscribing.\n                 We will redefine it in onMount and onStop. */\n    set(data) {\n      if ($atom.value !== data) {\n        $atom.value = data\n        $atom.notify()\n      }\n    },\n    subscribe(listener, listenerLevel) {\n      let unbind = $atom.listen(listener, listenerLevel)\n      listener($atom.value)\n      return unbind\n    },\n    value: initialValue\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    $atom[clean] = () => {\n      listeners = []\n      $atom.lc = 0\n      $atom.off()\n    }\n  }\n\n  return $atom\n}\n", "import { clean } from '../clean-stores/index.js'\n\nconst START = 0\nconst STOP = 1\nconst SET = 2\nconst NOTIFY = 3\nconst MOUNT = 5\nconst UNMOUNT = 6\nconst ACTION = 7\nconst REVERT_MUTATION = 10\n\nexport let on = (object, listener, eventKey, mutateStore) => {\n  object.events = object.events || {}\n  if (!object.events[eventKey + REVERT_MUTATION]) {\n    object.events[eventKey + REVERT_MUTATION] = mutateStore(eventProps => {\n      // eslint-disable-next-line no-sequences\n      object.events[eventKey].reduceRight((event, l) => (l(event), event), {\n        shared: {},\n        ...eventProps\n      })\n    })\n  }\n  object.events[eventKey] = object.events[eventKey] || []\n  object.events[eventKey].push(listener)\n  return () => {\n    let currentListeners = object.events[eventKey]\n    let index = currentListeners.indexOf(listener)\n    currentListeners.splice(index, 1)\n    if (!currentListeners.length) {\n      delete object.events[eventKey]\n      object.events[eventKey + REVERT_MUTATION]()\n      delete object.events[eventKey + REVERT_MUTATION]\n    }\n  }\n}\n\nexport let onStart = ($store, listener) =>\n  on($store, listener, START, runListeners => {\n    let originListen = $store.listen\n    $store.listen = arg => {\n      if (!$store.lc && !$store.starting) {\n        $store.starting = true\n        runListeners()\n        delete $store.starting\n      }\n      return originListen(arg)\n    }\n    return () => {\n      $store.listen = originListen\n    }\n  })\n\nexport let onStop = ($store, listener) =>\n  on($store, listener, STOP, runListeners => {\n    let originOff = $store.off\n    $store.off = () => {\n      runListeners()\n      originOff()\n    }\n    return () => {\n      $store.off = originOff\n    }\n  })\n\nexport let onSet = ($store, listener) =>\n  on($store, listener, SET, runListeners => {\n    let originSet = $store.set\n    let originSetKey = $store.setKey\n    if ($store.setKey) {\n      $store.setKey = (changed, changedValue) => {\n        let isAborted\n        let abort = () => {\n          isAborted = true\n        }\n\n        runListeners({\n          abort,\n          changed,\n          newValue: { ...$store.value, [changed]: changedValue }\n        })\n        if (!isAborted) return originSetKey(changed, changedValue)\n      }\n    }\n    $store.set = newValue => {\n      let isAborted\n      let abort = () => {\n        isAborted = true\n      }\n\n      runListeners({ abort, newValue })\n      if (!isAborted) return originSet(newValue)\n    }\n    return () => {\n      $store.set = originSet\n      $store.setKey = originSetKey\n    }\n  })\n\nexport let onNotify = ($store, listener) =>\n  on($store, listener, NOTIFY, runListeners => {\n    let originNotify = $store.notify\n    $store.notify = changed => {\n      let isAborted\n      let abort = () => {\n        isAborted = true\n      }\n\n      runListeners({ abort, changed })\n      if (!isAborted) return originNotify(changed)\n    }\n    return () => {\n      $store.notify = originNotify\n    }\n  })\n\nexport let STORE_UNMOUNT_DELAY = 1000\n\nexport let onMount = ($store, initialize) => {\n  let listener = payload => {\n    let destroy = initialize(payload)\n    if (destroy) $store.events[UNMOUNT].push(destroy)\n  }\n  return on($store, listener, MOUNT, runListeners => {\n    let originListen = $store.listen\n    $store.listen = (...args) => {\n      if (!$store.lc && !$store.active) {\n        $store.active = true\n        runListeners()\n      }\n      return originListen(...args)\n    }\n\n    let originOff = $store.off\n    $store.events[UNMOUNT] = []\n    $store.off = () => {\n      originOff()\n      setTimeout(() => {\n        if ($store.active && !$store.lc) {\n          $store.active = false\n          for (let destroy of $store.events[UNMOUNT]) destroy()\n          $store.events[UNMOUNT] = []\n        }\n      }, STORE_UNMOUNT_DELAY)\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      let originClean = $store[clean]\n      $store[clean] = () => {\n        for (let destroy of $store.events[UNMOUNT]) destroy()\n        $store.events[UNMOUNT] = []\n        $store.active = false\n        originClean()\n      }\n    }\n\n    return () => {\n      $store.listen = originListen\n      $store.off = originOff\n    }\n  })\n}\n\n\nexport let onAction = ($store, listener) =>\n  on($store, listener, ACTION, runListeners => {\n    let errorListeners = {}\n    let endListeners = {}\n    let originAction = $store.action\n    $store.action = (id, actionName, args) => {\n      runListeners({\n        actionName,\n        args,\n        id,\n        onEnd: l => {\n          (endListeners[id] || (endListeners[id] = [])).push(l)\n        },\n        onError: l => {\n          (errorListeners[id] || (errorListeners[id] = [])).push(l)\n        }\n      })\n      return [\n        error => {\n          if (errorListeners[id]) {\n            for (let l of errorListeners[id]) l({ error })\n          }\n        },\n        () => {\n          if (endListeners[id]) {\n            for (let l of endListeners[id]) l()\n            delete errorListeners[id]\n            delete endListeners[id]\n          }\n        }\n      ]\n    }\n    return () => {\n      $store.action = originAction\n    }\n  })\n", "import { atom } from '../atom/index.js'\nimport { onMount } from '../lifecycle/index.js'\n\nexport let computed = (stores, cb) => {\n  if (!Array.isArray(stores)) stores = [stores]\n\n  let diamondArgs\n  let run = () => {\n    let args = stores.map($store => $store.get())\n    if (\n      diamondArgs === undefined ||\n      args.some((arg, i) => arg !== diamondArgs[i])\n    ) {\n      diamondArgs = args\n      $computed.set(cb(...args))\n    }\n  }\n  let $computed = atom(undefined, Math.max(...stores.map(s => s.l)) + 1)\n\n  onMount($computed, () => {\n    let unbinds = stores.map($store => $store.listen(run, $computed.l))\n    run()\n    return () => {\n      for (let unbind of unbinds) unbind()\n    }\n  })\n\n  return $computed\n}\n", "import { atom } from '../atom/index.js'\n\nexport let map = (value = {}) => {\n  let $map = atom(value)\n\n  $map.setKey = function (key, newValue) {\n    if (typeof newValue === 'undefined') {\n      if (key in $map.value) {\n        $map.value = { ...$map.value }\n        delete $map.value[key]\n        $map.notify(key)\n      }\n    } else if ($map.value[key] !== newValue) {\n      $map.value = {\n        ...$map.value,\n        [key]: newValue\n      }\n      $map.notify(key)\n    }\n  }\n\n  return $map\n}\n"],
  "mappings": "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",
  "names": ["event", "value"]
}
